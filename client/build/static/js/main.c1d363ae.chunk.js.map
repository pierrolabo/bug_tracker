{"version":3,"sources":["reducers/errorReducer.js","reducers/authReducer.js","reducers/userReducer.js","reducers/ticketReducer.js","reducers/projectReducer.js","reducers/reducers.js","configureStore.js","actions/types.js","App.js","routes/PrivateRoute.js","routes/AdminRoute.js","actions/errorActions.js","actions/projectActions.js","components/NavBar.js","actions/authActions.js","components/sidebar/TicketMenu/TicketMenu.js","components/sidebar/ProjectMenu/ProjectMenu.js","components/sidebar/MenuAdmin/MenuAdmin.js","components/sidebar/SideBar.js","views/Index.js","actions/ticketActions.js","components/TicketsCards/TicketCard.js","components/admin/DashboardAdmin.js","views/Home.js","components/auth/Register.js","components/auth/Login.js","actions/userActions.js","components/Select/SelectMultiProjects.js","components/modals/EditUserModal.js","components/UserList/UserList.js","views/Users.js","components/Select/SelectSingleProject.js","components/modals/EditTicketModal.js","components/TicketList/TicketList.js","views/Tickets.js","views/CreateTicket.js","components/Select/SelectMultiUsers.js","components/modals/EditProjectModal.js","components/modals/ConfirmDeleteModal.js","components/ProjectList/ProjectList.js","views/Projects.js","views/CreateProject.js","components/Answer/Answer.js","components/Answer/AddAnswer.js","components/Select/SelectSingleUser.js","views/ViewSingleTicket.js","components/TicketList/TicketListSingleProject.js","components/UserList/UserListSingleProject.js","views/DetailsProject.js","routes/index.js","index.js"],"names":["initialState","msg","status","id","state","action","type","GET_ERRORS","payload","CLEAR_ERRORS","token","localStorage","getItem","isAuthenticated","isLoading","role","user","USER_LOADING","USER_LOADED","LOGIN_SUCCESS","REGISTER_SUCCESS","setItem","AUTH_ERROR","LOGIN_FAIL","LOGOUT_SUCCESS","REGISTER_FAIL","removeItem","users","loading","loadingUser","GET_USER","GET_USERS","ADD_USER","UPDATE_USER","filteredUsers","filter","_id","DELETE_USER","USERS_LOADING","UPDATE_USER_ROLE","UPDATE_USER_FAIL","GET_USERS_FAIL","GET_USER_FAIL","tickets","ticket","assigned_to","completed_by","isCompleted","projectID","title","description","created_by","date","Date","now","answers","UPDATE_ASSIGNED_TO","COMPLETED_TICKET","DELETE_REPLY","CLEAR_TICKET","DELETE_REPLY_FAIL","GET_TICKETS","GET_TICKET","project","GET_TICKET_SUCCESS","TICKETS_LOADING","TICKET_LOADING","UPDATE_TICKET_SUCCESS","filteredTickets","map","GET_TICKETS_FAIL","GET_TICKET_FAIL","UPDATE_TICKET_FAIL","CREATE_TICKET","CREATE_TICKET_SUCCESS","CREATE_TICKET_ERROR","ADD_REPLY","ADD_REPLY_FAIL","projects","GET_PROJECTS","PROJECTS_LOADING","GET_PROJECTS_FAIL","UPDATE_PROJECT_SUCCESS","filteredProjects","UPDATE_PROJECT_FAIL","UPDATE_PROJECT","ADD_PROJECT","ADD_PROJECT_FAIL","ADD_PROJECT_SUCCESS","DELETE_PROJECT","DELETE_PROJECT_FAIL","DELETE_PROJECT_SUCCESS","CLEAR_PROJECTS","createRootReducer","history","combineReducers","router","connectRouter","error","errorReducer","auth","authReducer","userReducer","ticketReducer","projectReducer","createBrowserHistory","persistConfig","key","storage","rootReducer","persistReducer","middleware","thunk","routerMiddleware","middlewareEnhancer","applyMiddleware","composedEnhancer","compose","window","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","persistor","persistStore","hot","module","PrivateRoute","children","rest","render","location","to","returnErrors","clearErrors","getProjects","dispatch","getState","setProjectsLoading","axios","get","tokenConfig","then","res","data","catch","err","response","config","headers","NavBar","isOpen","toggle","setState","handleClick","props","clearProjects","logout","this","authLinks","NavItem","className","name","NavLink","onClick","href","guestLinks","Navbar","color","dark","expand","Container","NavbarBrand","NavbarToggler","Collapse","navbar","Nav","Component","connect","push","TicketMenu","e","target","ListGroup","ListGroupItem","active","tag","index","MenuAdmin","SideBar","ProjectMenu","Index","Jumbotron","fluid","getTickets","setTicketsLoading","TicketCard","ticketInfo","ticketNumber","ticketType","newTickets","Card","CardBody","CardTitle","CardText","icon","faTicketAlt","Progress","value","progressTickets","urgentTickets","unresolvedTickets","param","renderSwitch","DashboardAdmin","newTicket","progressTicket","urgentTicket","unresolvedTicket","length","Row","Col","Home","Register","lastname","password","onChange","onSubmit","preventDefault","newUser","email","register","prevProps","nextProps","Form","FormGroup","Label","for","Input","placeholder","Button","block","body","JSON","stringify","post","Login","surname","login","getUsers","setUsersLoading","SelectMultiProjects","handleChange","options","label","console","log","createOptionsProjects","defaultValue","userList","includes","createDefaultProject","isMulti","optionsRoles","EditUserModal","modal","address","city","zip","userRole","orgs","toggleModal","handleChangeRolesSelect","handleChangeProjects","handleChangeOrgsSelect","handleSubmit","errorModal","Modal","ModalHeader","ModalBody","Alert","valid","form","md","style","marginTop","UserList","prevProjects","nextProjects","filteredOrgs","org","updatedUser","updateUser","parentNode","CardHeader","Table","scope","faUserEdit","put","Users","SelectSingleProject","defaultProject","STATUS","createOptionsUsers","createDefaultUser","defaultUser","EditTicketModal","nextProjID","handleSubmitModal","handleChangeSelectStatus","handleChangeSelectAssignedTo","handleChangeSelectAssignedProject","handleSave","updateTicket","editTicket","Tickets","handleEdit","event","getUserFromID","filteredUser","getProjectNameFromTicket","handleView","hover","faEdit","faEye","TicketList","STATUS_TICKET","DEFAULT_STATUS_TICKET","DEFAULT_USER_ASSIGNED","CreateTicket","createTicket","SelectMultiUsers","EditProjectModal","nextUserList","nextUsers","updatedProject","updateProject","handleChangeSelectAssignedUsers","editProject","ConfirmDeleteModal","useState","setModal","faTrash","ModalFooter","delete","ProjectList","handleDelete","deleteProject","projectNbr","Projects","CreateProject","newProject","addProject","Answer","answer","getUserFromId","toUTCString","replyID","reply","AddAnswer","setReply","InputGroup","InputGroupAddon","addonType","handleAddReply","SelectSingleUser","createOptionsUser","userID","ViewSingleTicket","nextAssignedUser","params","match","addReply","ticketID","answerID","deleteReply","handleChangeSelectUser","handleSaveSelectUser","setAssignedTo","handleMarkAsCompleted","setCompletedTicket","getTicket","xs","sm","Badge","clearTicket","TicketListSingleProject","authorizedToEdit","UserListSingleProject","popoverOpen","setPopoverOpen","width","height","CardImg","top","src","alt","Popover","placement","PopoverHeader","PopoverBody","DetailsProject","i","Routes","pathname","exact","path","component","AdminRoute","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.c1d363ae.chunk.js","sourcesContent":["import { GET_ERRORS, CLEAR_ERRORS } from '../actions/types';\n\nconst initialState = {\n  msg: {},\n  status: null,\n  id: null,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return {\n        msg: action.payload.msg,\n        status: action.payload.status,\n        id: action.payload.id,\n      };\n    case CLEAR_ERRORS:\n      return {\n        msg: {},\n        status: null,\n        id: null,\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  USER_LOADED,\n  USER_LOADING,\n  AUTH_ERROR,\n  LOGIN_FAIL,\n  LOGIN_SUCCESS,\n  LOGOUT_SUCCESS,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n} from '../actions/types';\n\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: null,\n  isLoading: null,\n  role: null,\n  user: null,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case USER_LOADING:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        isLoading: false,\n        user: action.payload,\n        role: action.payload.role,\n      };\n    case LOGIN_SUCCESS:\n    case REGISTER_SUCCESS:\n      localStorage.setItem('token', action.payload.token);\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        role: action.payload.user.role,\n        isLoading: false,\n      };\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT_SUCCESS:\n    case REGISTER_FAIL:\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        isLoading: false,\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  GET_USERS,\n  GET_USER,\n  ADD_USER,\n  DELETE_USER,\n  UPDATE_USER,\n  UPDATE_USER_FAIL,\n  UPDATE_USER_ROLE,\n  USER_LOADING,\n  USERS_LOADING,\n  GET_USERS_FAIL,\n  GET_USER_FAIL,\n} from '../actions/types';\n\nconst initialState = {\n  users: [],\n  user: null,\n  loading: false,\n  loadingUser: false,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_USER:\n      return {\n        ...state,\n        user: action.payload,\n        loadingUser: false,\n      };\n    case GET_USERS:\n      return {\n        ...state,\n        users: action.payload,\n        loading: false,\n      };\n    case ADD_USER:\n      return {\n        ...state,\n        users: [action.payload, ...state.users],\n      };\n    case UPDATE_USER:\n      const filteredUsers = state.users.filter(\n        (user) => user._id !== action.payload._id\n      );\n\n      return {\n        ...state,\n        users: [action.payload, ...filteredUsers],\n      };\n    case DELETE_USER:\n      return {\n        ...state,\n        users: state.users.filter((user) => user.id !== action.payload),\n      };\n    case USERS_LOADING:\n      return {\n        ...state,\n        users: [],\n        loading: true,\n      };\n    case USER_LOADING:\n      return {\n        ...state,\n        user: null,\n        loadingUser: true,\n      };\n    case UPDATE_USER_ROLE:\n      return {\n        ...state,\n        users: [action.payload, ...state.users],\n      };\n    /*\n    case UPDATE_USER:\n      return {\n        ...state,\n        user: action.payload,\n      };\n      */\n    case UPDATE_USER_FAIL:\n      return {\n        ...state,\n      };\n    case GET_USERS_FAIL:\n      return {\n        ...state,\n        users: [],\n        user: null,\n        loading: false,\n      };\n    case GET_USER_FAIL:\n      return {\n        ...state,\n        user: null,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  GET_TICKET,\n  GET_TICKETS,\n  TICKET_LOADING,\n  TICKETS_LOADING,\n  GET_TICKET_FAIL,\n  GET_TICKETS_FAIL,\n  GET_TICKET_SUCCESS,\n  CREATE_TICKET,\n  CREATE_TICKET_SUCCESS,\n  UPDATE_TICKET_SUCCESS,\n  UPDATE_TICKET_FAIL,\n  CREATE_TICKET_ERROR,\n  ADD_REPLY,\n  ADD_REPLY_FAIL,\n  DELETE_REPLY,\n  DELETE_REPLY_FAIL,\n  CLEAR_TICKET,\n  COMPLETED_TICKET,\n  UPDATE_ASSIGNED_TO,\n} from '../actions/types';\n\nconst initialState = {\n  tickets: [],\n  ticket: {\n    _id: 1,\n    status: 'loading',\n    assigned_to: 1,\n    completed_by: 'fake',\n    isCompleted: false,\n    projectID: 1,\n    title: 'fake',\n    description: 'fake',\n    created_by: 'fake',\n    date: Date.now,\n    answers: [],\n  },\n  isLoading: false,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case UPDATE_ASSIGNED_TO:\n      return {\n        ...state,\n        ticket: action.payload,\n      };\n    case COMPLETED_TICKET:\n      return {\n        ...state,\n        ticket: action.payload,\n      };\n    case DELETE_REPLY:\n      return {\n        ...state,\n        ticket: action.payload,\n      };\n    case CLEAR_TICKET:\n      return {\n        ...state,\n        ticket: [],\n      };\n    case DELETE_REPLY_FAIL:\n      return {\n        ...state,\n      };\n    case GET_TICKETS:\n      return {\n        ...state,\n        tickets: action.payload,\n        isLoading: false,\n      };\n    case GET_TICKET:\n      return {\n        ...state,\n        isLoading: true,\n        project: [],\n      };\n    case GET_TICKET_SUCCESS:\n      return {\n        ...state,\n        ticket: action.payload[0],\n        isLoading: false,\n      };\n    case TICKETS_LOADING:\n    case TICKET_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    case UPDATE_TICKET_SUCCESS:\n      const filteredTickets = state.tickets.map((ticket) => {\n        if (ticket._id === action.payload._id) {\n          return action.payload;\n        }\n        return ticket;\n      });\n      return {\n        ...state,\n        tickets: filteredTickets,\n      };\n    case GET_TICKETS_FAIL:\n    case GET_TICKET_FAIL:\n    case UPDATE_TICKET_FAIL:\n      return {\n        ...state,\n        isLoading: false,\n      };\n    case CREATE_TICKET:\n      return {\n        ...state,\n      };\n    case CREATE_TICKET_SUCCESS:\n      return {\n        ...state,\n        tickets: action.payload,\n      };\n    case CREATE_TICKET_ERROR:\n      return {\n        ...state,\n      };\n    case ADD_REPLY:\n      return {\n        ...state,\n        ticket: action.payload,\n      };\n    case ADD_REPLY_FAIL:\n      return {\n        ...state,\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  GET_PROJECTS,\n  PROJECTS_LOADING,\n  GET_PROJECTS_FAIL,\n  UPDATE_PROJECT_FAIL,\n  UPDATE_PROJECT,\n  UPDATE_PROJECT_SUCCESS,\n  ADD_PROJECT,\n  ADD_PROJECT_SUCCESS,\n  ADD_PROJECT_FAIL,\n  DELETE_PROJECT,\n  DELETE_PROJECT_SUCCESS,\n  DELETE_PROJECT_FAIL,\n  CLEAR_PROJECTS,\n} from '../actions/types';\n\nconst initialState = {\n  projects: [],\n  isLoading: false,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_PROJECTS:\n      return {\n        ...state,\n        projects: action.payload,\n        isLoading: false,\n      };\n    case PROJECTS_LOADING:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case GET_PROJECTS_FAIL:\n      return {\n        ...state,\n        isLoading: false,\n      };\n    case UPDATE_PROJECT_SUCCESS:\n      const filteredProjects = state.projects.map((project) => {\n        if (project._id === action.payload._id) {\n          return action.payload;\n        }\n        return project;\n      });\n      return {\n        ...state,\n        projects: filteredProjects,\n      };\n    case UPDATE_PROJECT_FAIL:\n    case UPDATE_PROJECT:\n      return {\n        ...state,\n      };\n    case ADD_PROJECT:\n    case ADD_PROJECT_FAIL:\n      return {\n        ...state,\n      };\n    case ADD_PROJECT_SUCCESS:\n      return {\n        ...state,\n        projects: [state.projects, action.payload.project],\n      };\n    case DELETE_PROJECT:\n    case DELETE_PROJECT_FAIL:\n      return {\n        ...state,\n      };\n    case DELETE_PROJECT_SUCCESS:\n      return {\n        ...state,\n        projects: state.projects.filter(\n          (project) => project._id !== action.payload.id\n        ),\n      };\n    case CLEAR_PROJECTS:\n      return {\n        ...state,\n        projects: [],\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\nimport errorReducer from './errorReducer';\nimport authReducer from './authReducer';\nimport userReducer from './userReducer';\nimport ticketReducer from './ticketReducer';\nimport projectReducer from './projectReducer';\n\nconst createRootReducer = (history) =>\n  combineReducers({\n    router: connectRouter(history),\n    error: errorReducer,\n    auth: authReducer,\n    user: userReducer,\n    ticket: ticketReducer,\n    project: projectReducer,\n  });\n\nexport default createRootReducer;\n","import { createBrowserHistory } from 'history';\nimport { routerMiddleware } from 'connected-react-router';\n\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { persistReducer, persistStore } from 'redux-persist';\n// defaults to localStorage for web\nimport storage from 'redux-persist/lib/storage';\n\nimport createRootReducer from './reducers/reducers';\n\nexport const history = createBrowserHistory();\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n};\nconst rootReducer = persistReducer(persistConfig, createRootReducer(history));\n\nconst middleware = [thunk, routerMiddleware(history)];\nconst middlewareEnhancer = applyMiddleware(...middleware);\nconst composedEnhancer = compose(\n  middlewareEnhancer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\nconst store = createStore(rootReducer, composedEnhancer);\nconst persistor = persistStore(store);\nexport { persistor, store };\n","//  Auth management\nexport const USER_LOADING = 'USER_LOADING';\nexport const USER_LOADED = 'USER_LOADED';\nexport const AUTH_ERROR = 'AUTH_ERROR';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\nexport const GET_ERRORS = 'GET_ERRORS';\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\n\n//  User Management\nexport const GET_USERS = 'GET_USERS';\nexport const GET_USER = 'GET_USER';\nexport const ADD_USER = 'ADD_USER';\nexport const UPDATE_USER = 'UPDATE_USER';\nexport const UPDATE_USER_ROLE = 'UPDATE_USER_ROLE';\nexport const USERS_LOADING = 'USERS_LOADING';\nexport const DELETE_USER = 'DELETE_USER';\nexport const GET_USERS_FAIL = 'GET_USERS_FAIL';\nexport const GET_USER_FAIL = 'GET_USER_FAIL';\nexport const UPDATE_USER_FAIL = 'UPDATE_USER_FAIL';\n\n//  Tickets management\nexport const GET_TICKET = 'GET_TICKET';\nexport const GET_TICKET_FAIL = 'GET_TICKET_FAIL';\nexport const GET_TICKET_SUCCESS = 'GET_TICKET_SUCCESS';\nexport const GET_TICKETS = 'GET_TICKETS';\nexport const TICKETS_LOADING = 'TICKETS_LOADING';\nexport const TICKET_LOADING = 'TICKET_LOADING';\nexport const GET_TICKETS_FAIL = 'GET_TICKETS_FAIL';\nexport const ADD_TICKET = 'ADD_TICKET';\nexport const UPDATE_TICKET = 'UPDATE_TICKET';\nexport const DELETE_TICKET = 'DELETE_TICKET';\nexport const UPDATE_TICKET_SUCCESS = 'UPDATE_TICKET_SUCCESS';\nexport const UPDATE_TICKET_FAIL = 'UPDATE_TICKET_FAIL';\nexport const CREATE_TICKET = 'CREATE_TICKET';\nexport const CREATE_TICKET_SUCCESS = 'CREATE_TICKET_SUCCESS';\nexport const CREATE_TICKET_ERROR = 'CREATE_TICKET_ERROR';\nexport const ADD_REPLY = 'ADD_REPLY';\nexport const ADD_REPLY_FAIL = 'ADD_REPLY_FAIL';\nexport const DELETE_REPLY = 'DELETE_REPLY';\nexport const DELETE_REPLY_FAIL = 'DELETE_REPLY_FAIL';\nexport const CLEAR_TICKET = 'CLEAR_TICKET';\nexport const COMPLETED_TICKET = 'COMPLETED_TICKET';\nexport const UPDATE_ASSIGNED_TO = 'UPDATE_ASSIGNED_TO';\n//  Projects Management\nexport const GET_PROJECTS = 'GET_PROJECTS';\nexport const PROJECTS_LOADING = 'PROJECTS_LOADING';\nexport const GET_PROJECTS_FAIL = 'GET_PROJECTS_FAIL';\nexport const ADD_PROJECT = 'ADD_PROJECT';\nexport const DELETE_PROJECT = 'DELETE_PROJECT';\nexport const DELETE_PROJECT_SUCCESS = 'DELETE_PROJECT_SUCCESS';\nexport const DELETE_PROJECT_FAIL = 'DELETE_PROJECT_FAIL';\nexport const UPDATE_PROJECT = 'UPDATE_PROJECT';\nexport const UPDATE_PROJECT_SUCCESS = 'UPDATE_PROJECT_SUCCESS';\nexport const UPDATE_PROJECT_FAIL = 'UPDATE_PROJECT_FAIL';\nexport const ADD_PROJECT_SUCCESS = 'ADD_PROJECT_SUCCESS';\nexport const ADD_PROJECT_FAIL = 'ADD_PROJECT_FAIL';\nexport const CLEAR_PROJECTS = 'CLEAR_PROJECTS';\n","import React from 'react';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { hot } from 'react-hot-loader';\nimport Routes from './routes';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nconst App = ({ history }) => (\n  <ConnectedRouter history={history}>\n    <Routes />\n  </ConnectedRouter>\n);\n\nexport default hot(module)(App);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PrivateRoute = ({ children, auth, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={(location) =>\n        auth.isAuthenticated ? children : <Redirect to='/login' />\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PrivateRoute = ({ children, auth, role, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={(location) => {\n        if (auth.isAuthenticated && role === 'ADMIN') {\n          return children;\n        } else {\n          return <Redirect to='/home' />;\n        }\n      }}\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import { GET_ERRORS, CLEAR_ERRORS } from './types';\n\n//  Return ERRORS\nexport const returnErrors = (msg, status, id = null) => {\n  return {\n    type: GET_ERRORS,\n    payload: { msg, status, id },\n  };\n};\n\n//  Clear ERRORS\nexport const clearErrors = () => {\n  return {\n    type: CLEAR_ERRORS,\n  };\n};\n","import axios from 'axios';\nimport {\n  GET_PROJECTS,\n  PROJECTS_LOADING,\n  GET_PROJECTS_FAIL,\n  UPDATE_PROJECT,\n  UPDATE_PROJECT_SUCCESS,\n  UPDATE_PROJECT_FAIL,\n  ADD_PROJECT,\n  ADD_PROJECT_SUCCESS,\n  ADD_PROJECT_FAIL,\n  DELETE_PROJECT,\n  DELETE_PROJECT_SUCCESS,\n  DELETE_PROJECT_FAIL,\n  CLEAR_PROJECTS,\n} from '../actions/types';\n\nimport { returnErrors } from './errorActions';\nimport { history } from '../configureStore';\n\n//  We cant use thunk to getState()\n//  So we import it manually\nimport { store } from '../configureStore';\n\nexport const clearProjects = () => (dispatch) => {\n  dispatch({\n    type: CLEAR_PROJECTS,\n  });\n};\nexport const getProjects = () => (dispatch, getState) => {\n  dispatch(setProjectsLoading());\n  axios\n    .get('/api/projects', tokenConfig())\n    .then((res) => {\n      dispatch({\n        type: GET_PROJECTS,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      dispatch(returnErrors(err.response.data, err.response.status));\n      dispatch({\n        type: GET_PROJECTS_FAIL,\n      });\n    });\n};\n\nexport const updateProject = ({ name, description, _id, nextUsers }) => (\n  dispatch,\n  getState\n) => {\n  dispatch({ type: UPDATE_PROJECT });\n  //    Headers\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n  // body request\n  const body = JSON.stringify({\n    name,\n    description,\n    _id,\n    nextUsers,\n  });\n  axios\n    .put('/api/projects', body, config)\n    .then((res) => {\n      dispatch({\n        type: UPDATE_PROJECT_SUCCESS,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      dispatch(returnErrors(err.response.data, err.response.status));\n      dispatch({\n        type: UPDATE_PROJECT_FAIL,\n      });\n    });\n};\nexport const addProject = ({ name, description }) => (dispatch, getState) => {\n  dispatch({ type: ADD_PROJECT });\n  //    Headers\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n  // body request\n  const body = JSON.stringify({\n    name,\n    description,\n  });\n\n  axios\n    .post('/api/projects', body, config)\n    .then((res) => {\n      dispatch({\n        type: ADD_PROJECT_SUCCESS,\n        payload: res.data,\n      });\n      history.push('/projects/view');\n    })\n    .catch((err) => {\n      console.log('error, ', err);\n      dispatch(\n        returnErrors(err.response.data, err.response.status, 'ADD_PROJECT_FAIL')\n      );\n      dispatch({\n        type: ADD_PROJECT_FAIL,\n      });\n    });\n};\nexport const deleteProject = (id) => (dispatch, getState) => {\n  dispatch({ type: DELETE_PROJECT });\n  axios\n    .delete(`/api/projects/${id}`)\n    .then((res) => {\n      dispatch({\n        type: DELETE_PROJECT_SUCCESS,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      console.log('error, ', err);\n      dispatch(\n        returnErrors(\n          err.response.data,\n          err.response.status,\n          'DELETE_PROJECT_FAIL'\n        )\n      );\n      dispatch({\n        type: DELETE_PROJECT_FAIL,\n      });\n    });\n};\nexport const setProjectsLoading = () => {\n  return {\n    type: PROJECTS_LOADING,\n  };\n};\n\n//  Setup config/headers and token\nexport const tokenConfig = () => {\n  //get token from localstorage\n  const token = store.getState().auth.token;\n  //Headers\n  const config = {\n    headers: {\n      'Content-type': 'application/json',\n    },\n  };\n\n  // if tooken, add to headers\n  if (token) {\n    config.headers['x-auth-token'] = token;\n  }\n  return config;\n};\n","import React, { Component, Fragment } from 'react';\n\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Container,\n  Nav,\n  NavItem,\n  NavLink,\n} from 'reactstrap';\n\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { clearProjects } from '../actions/projectActions';\nimport { logout } from '../actions/authActions';\n\nclass NavBar extends Component {\n  state = {\n    isOpen: false,\n  };\n\n  static propTypes = {\n    auth: PropTypes.object.isRequired,\n    logout: PropTypes.func.isRequired,\n  };\n\n  toggle = () => {\n    this.setState({\n      isOpen: !this.state.isOpen,\n    });\n  };\n  handleClick = () => {\n    this.props.clearProjects();\n    this.props.logout();\n  };\n  render() {\n    const { isAuthenticated, user } = this.props.auth;\n\n    //Fragment UI\n    const authLinks = (\n      <Fragment>\n        <NavItem>\n          <span className='navbar-text mr-3'>\n            <strong>{user ? `Welcome ${user.name}` : ''}</strong>\n          </span>\n        </NavItem>\n        <NavItem>\n          <NavLink onClick={this.handleClick} href='#'>\n            Logout\n          </NavLink>\n        </NavItem>\n      </Fragment>\n    );\n\n    const guestLinks = (\n      <Fragment>\n        <NavItem>\n          <NavLink href='/register'>Register</NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink href='/login'>Login</NavLink>\n        </NavItem>\n      </Fragment>\n    );\n\n    return (\n      <div className='navbar-container '>\n        <Navbar color='dark' dark expand='sm' className='mb-8'>\n          <Container>\n            <NavbarBrand className='d-xl-none' href='/'>\n              Ticketter\n            </NavbarBrand>\n            <NavbarToggler onClick={this.toggle}></NavbarToggler>\n            <Collapse isOpen={this.state.isOpen} navbar>\n              <Nav className='ml-auto' navbar>\n                {isAuthenticated ? authLinks : guestLinks}\n              </Nav>\n            </Collapse>\n          </Container>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\nexport default connect(mapStateToProps, { clearProjects, logout })(NavBar);\n","import axios from 'axios';\nimport { returnErrors } from './errorActions.js';\n\n//Required to push the user to home after login\nimport { history } from '../configureStore';\n\nimport {\n  USER_LOADED,\n  USER_LOADING,\n  AUTH_ERROR,\n  LOGIN_FAIL,\n  LOGIN_SUCCESS,\n  LOGOUT_SUCCESS,\n} from './types';\n\n//    Check token & load user\nexport const loadUser = () => (dispatch, getState) => {\n  //  User loading\n  dispatch({ type: USER_LOADING });\n  axios\n    .get('/api/auth/checkToken', tokenConfig(getState))\n    .then((res) => {\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      dispatch(returnErrors(err.response.data, err.response.status));\n      dispatch({\n        type: AUTH_ERROR,\n      });\n    });\n};\n\n//    Register user\nexport const register = ({ name, lastname, email, password }) => (dispatch) => {\n  //    Headers\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n  //  Body\n  const body = JSON.stringify({ name, lastname, email, password });\n\n  //Request\n  axios\n    .post('/api/users', body, config)\n    .then((res) => {\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data,\n      });\n      history.push('/home');\n    })\n    .catch((err) => {\n      dispatch(\n        returnErrors(err.response.data, err.response.status, 'LOGIN_FAIL')\n      );\n      dispatch({\n        type: LOGIN_FAIL,\n      });\n    });\n};\n\n//  Login user\nexport const login = ({ email, password }) => (dispatch, getState) => {\n  //  Headers\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  //  Request body\n  const body = JSON.stringify({ email, password });\n\n  axios\n    .post('/api/auth', body, config)\n    .then((res) => {\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data,\n      });\n      //redirect user to Home\n      history.push('/home');\n    })\n\n    .catch((err) => {\n      dispatch(\n        returnErrors(err.response.data, err.response.status, 'LOGIN_FAIL')\n      );\n      dispatch({\n        type: LOGIN_FAIL,\n      });\n    });\n};\n\n//  Setup config/headers and token\nexport const tokenConfig = (getState) => {\n  //get token from localstorage\n  const token = getState().auth.token;\n  //Headers\n  const config = {\n    headers: {\n      'Content-type': 'application/json',\n    },\n  };\n\n  //  if tooken, add to headers\n  if (token) {\n    config.headers['x-auth-token'] = token;\n  }\n  return config;\n};\n\n//LOGOUT User\nexport const logout = () => {\n  history.push('/');\n  return {\n    type: LOGOUT_SUCCESS,\n  };\n};\n","import React from 'react';\nimport { ListGroup, ListGroupItem } from 'reactstrap';\nimport { history } from '../../../configureStore';\nconst TicketMenu = (props) => {\n  const { tickets } = props;\n  const handleClick = (e) => history.push(`/tickets/view/${e.target.id}`);\n  const handleClickMenu = () => history.push(`/tickets`);\n\n  return (\n    <ListGroup>\n      <ListGroupItem active tag='button' onClick={handleClickMenu}>\n        All my Tickets\n      </ListGroupItem>\n      {tickets.map((ticket, index) => {\n        return (\n          <ListGroupItem\n            onClick={handleClick}\n            id={ticket._id}\n            tag='button'\n            action\n          >\n            {ticket.title}\n          </ListGroupItem>\n        );\n      })}\n    </ListGroup>\n  );\n};\n\nexport default TicketMenu;\n","import React from 'react';\nimport { ListGroup, ListGroupItem } from 'reactstrap';\nimport { history } from '../../../configureStore';\nconst TicketMenu = (props) => {\n  const { projects } = props;\n  const handleClick = (e) => history.push(`/project/view/${e.target.id}`);\n  const handleClickMenu = () => history.push(`/projects`);\n\n  return (\n    <ListGroup>\n      <ListGroupItem active tag='button' onClick={handleClickMenu}>\n        All my Projects\n      </ListGroupItem>\n      {projects.map((project, index) => {\n        return (\n          <ListGroupItem\n            onClick={handleClick}\n            id={project._id}\n            tag='button'\n            action\n          >\n            {project.name}\n          </ListGroupItem>\n        );\n      })}\n    </ListGroup>\n  );\n};\n\nexport default TicketMenu;\n","import React from 'react';\nimport { ListGroup, ListGroupItem } from 'reactstrap';\nimport { history } from '../../../configureStore';\nconst MenuAdmin = () => {\n  const handleClickCreateTicket = () => history.push(`/tickets/create`);\n  const handleClickMenuTicket = () => history.push(`/tickets`);\n  const handleClickMenuProject = () => history.push(`/projects/view`);\n  const handleClickCreateProject = () => history.push(`/projects/create`);\n  const handleClickMenuUser = () => history.push(`/users/create`);\n\n  return (\n    <>\n      <ListGroup>\n        <ListGroupItem active tag='button' onClick={handleClickMenuTicket}>\n          Tickets\n        </ListGroupItem>\n        <ListGroupItem onClick={handleClickCreateTicket}>\n          Create Ticket\n        </ListGroupItem>\n      </ListGroup>\n      <ListGroup>\n        <ListGroupItem active tag='button' onClick={handleClickMenuProject}>\n          Projects\n        </ListGroupItem>\n        <ListGroupItem onClick={handleClickCreateProject}>\n          Create Projects\n        </ListGroupItem>\n      </ListGroup>\n      <ListGroup>\n        <ListGroupItem active tag='button' onClick={handleClickMenuUser}>\n          User Roles\n        </ListGroupItem>\n      </ListGroup>\n    </>\n  );\n};\n\nexport default MenuAdmin;\n","import React from 'react';\n\nimport TicketMenu from './TicketMenu/TicketMenu';\nimport ProjectMenu from './ProjectMenu/ProjectMenu';\nimport MenuAdmin from './MenuAdmin/MenuAdmin';\n\nconst SideBar = (props) => {\n  const { tickets, projects } = props;\n\n  return (\n    <div className='sidebar'>\n      {props.role !== 'ADMIN' ? (\n        <>\n          <TicketMenu tickets={tickets} />\n          <ProjectMenu projects={projects} />\n        </>\n      ) : (\n        ''\n      )}\n      {props.role === 'ADMIN' ? <MenuAdmin /> : ''}\n    </div>\n  );\n};\nexport default SideBar;\n","import React, { Component } from 'react';\n\n//  Bootstrap Elm\nimport { Jumbotron, Container } from 'reactstrap';\n\nclass Index extends Component {\n  render() {\n    return (\n      <div>\n        <Jumbotron fluid>\n          <Container fluid>\n            <h1 className='display-3'>Ticketter</h1>\n            <p className='lead'>The simplest ticket manager for your team :)</p>\n          </Container>\n        </Jumbotron>\n        <h2>Functionnalities</h2>\n      </div>\n    );\n  }\n}\n\nexport default Index;\n","import axios from 'axios';\n\n//  We cant use thunk to getState()\n//  So we import it manually\nimport { store } from '../configureStore';\nimport {\n  GET_TICKET,\n  GET_TICKET_SUCCESS,\n  GET_TICKETS,\n  GET_TICKET_FAIL,\n  TICKETS_LOADING,\n  GET_TICKETS_FAIL,\n  CREATE_TICKET,\n  CREATE_TICKET_SUCCESS,\n  CREATE_TICKET_ERROR,\n  UPDATE_TICKET_SUCCESS,\n  UPDATE_TICKET_FAIL,\n  ADD_REPLY,\n  ADD_REPLY_FAIL,\n  DELETE_REPLY,\n  DELETE_REPLY_FAIL,\n  CLEAR_TICKET,\n  COMPLETED_TICKET,\n  UPDATE_ASSIGNED_TO,\n} from '../actions/types';\nimport { history } from '../configureStore';\nimport { returnErrors } from './errorActions';\n\nexport const setAssignedTo = (id, userID) => (dispatch) => {\n  //    Headers\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n  // body request\n  const body = JSON.stringify({\n    userID,\n  });\n  axios\n    .put(`/api/tickets/setAssignedTo/${id}`, body, config)\n    .then((res) => {\n      dispatch({\n        type: UPDATE_ASSIGNED_TO,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      console.log('err: ', err);\n      dispatch(\n        returnErrors(\n          err.response.data,\n          err.response.status,\n          'UPDATE_ASSIGNED_TO_FAIL'\n        )\n      );\n    });\n};\nexport const setCompletedTicket = (id, userID) => (dispatch) => {\n  //    Headers\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n  // body request\n  const body = JSON.stringify({\n    userID,\n  });\n  axios\n    .put(`/api/tickets/setCompletedTicket/${id}`, body, config)\n    .then((res) => {\n      dispatch({\n        type: COMPLETED_TICKET,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      dispatch(\n        returnErrors(\n          err.response.data,\n          err.response.status,\n          'COMPLETED_TICKET_FAIL'\n        )\n      );\n    });\n};\nexport const clearTicket = () => (dispatch) => {\n  dispatch({\n    type: CLEAR_TICKET,\n  });\n};\nexport const deleteReply = (ticketID, answerID) => (dispatch, getState) => {\n  axios\n    .delete('/api/reply', { data: { ticketID, answerID } })\n    .then((res) => {\n      dispatch({\n        type: DELETE_REPLY,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      dispatch(\n        returnErrors(\n          err.response.data,\n          err.response.status,\n          'DELETE_REPLY_FAIL'\n        )\n      );\n      dispatch({\n        type: DELETE_REPLY_FAIL,\n      });\n    });\n};\nexport const addReply = (reply, id, userID, status) => (dispatch, getState) => {\n  //    Headers\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n  // body request\n  const body = JSON.stringify({\n    reply,\n    userID,\n    status,\n  });\n  axios\n    .post(`/api/reply/${id}`, body, config)\n    .then((res) => {\n      dispatch({\n        type: ADD_REPLY,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      dispatch(\n        returnErrors(err.response.data, err.response.status, 'ADD_REPLY_FAIL')\n      );\n      dispatch({\n        type: ADD_REPLY_FAIL,\n      });\n    });\n};\nexport const getTickets = () => (dispatch, getState) => {\n  dispatch(setTicketsLoading());\n\n  axios\n    .get('/api/tickets', tokenConfig())\n    .then((res) => {\n      dispatch({\n        type: GET_TICKETS,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      dispatch(returnErrors(err.response.data, err.response.status));\n      dispatch({\n        type: GET_TICKETS_FAIL,\n      });\n    });\n};\n\nexport const getTicket = (id) => (dispatch, getState) => {\n  dispatch(setTicketsLoading());\n  dispatch({ type: GET_TICKET });\n  axios\n    .get(`/api/tickets/${id}`)\n    .then((res) => {\n      dispatch({\n        type: GET_TICKET_SUCCESS,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      dispatch(returnErrors(err.response.data, err.response.status));\n      dispatch({\n        type: GET_TICKET_FAIL,\n      });\n    });\n};\n\nexport const updateTicket = ({\n  id,\n  title,\n  description,\n  assigned_to,\n  projectID,\n  status,\n  nextProjID,\n}) => (dispatch, getState) => {\n  //    Headers\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n  // body request\n  const body = JSON.stringify({\n    title,\n    description,\n    assigned_to,\n    projectID,\n    status,\n    nextProjID,\n  });\n  dispatch(setTicketsLoading());\n  axios\n    .put(`/api/tickets/${id}`, body, config)\n    .then((res) => {\n      dispatch({\n        type: UPDATE_TICKET_SUCCESS,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      dispatch(\n        returnErrors(\n          err.response.data,\n          err.response.status,\n          'UPDATE_TICKET_FAIL'\n        )\n      );\n      dispatch({\n        type: UPDATE_TICKET_FAIL,\n      });\n    });\n};\n\nexport const createTicket = ({\n  title,\n  description,\n  status,\n  assigned_to,\n  created_by,\n  projectID,\n}) => (dispatch, getState) => {\n  dispatch({ type: CREATE_TICKET });\n  //    Headers\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n  // body request\n  const body = JSON.stringify({\n    title,\n    description,\n    assigned_to,\n    created_by,\n    status,\n    projectID,\n  });\n  axios\n    .post('/api/tickets', body, config)\n    .then((res) => {\n      dispatch({\n        type: CREATE_TICKET_SUCCESS,\n        payload: res.data,\n      });\n      history.push('/tickets');\n    })\n    .catch((err) => {\n      dispatch(\n        returnErrors(\n          err.response.data,\n          err.response.status,\n          'CREATE_TICKET_FAIL'\n        )\n      );\n      dispatch({\n        type: CREATE_TICKET_ERROR,\n      });\n    });\n};\n\nexport const setTicketsLoading = () => {\n  return {\n    type: TICKETS_LOADING,\n  };\n};\n\n//  Setup config/headers and token\nexport const tokenConfig = () => {\n  //get token from localstorage\n  const token = store.getState().auth.token;\n  //Headers\n  const config = {\n    headers: {\n      'Content-type': 'application/json',\n    },\n  };\n\n  // if tooken, add to headers\n  if (token) {\n    config.headers['x-auth-token'] = token;\n  }\n  return config;\n};\n","import React from 'react';\nimport { Card, CardText, CardBody, CardTitle, Progress } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTicketAlt } from '@fortawesome/free-solid-svg-icons';\nconst TicketCard = (props) => {\n  const { ticketNumber, ticketType } = props.ticketInfo;\n  const renderSwitch = (param) => {\n    switch (param) {\n      case 'NEW':\n        return newTickets;\n      case 'PROGRESS':\n        return progressTickets;\n      case 'URGENT':\n        return urgentTickets;\n      case 'UNRESOLVED':\n        return unresolvedTickets;\n      default:\n        return '';\n    }\n  };\n  const newTickets = (\n    <Card>\n      <CardBody>\n        <CardTitle className='text-center'>New Tickets</CardTitle>\n        <CardText className='text-center'>\n          <FontAwesomeIcon icon={faTicketAlt} /> {ticketNumber}\n        </CardText>\n        <div className='text-center'>{`${ticketNumber}%`}</div>\n        <Progress color='warning' value={ticketNumber} />\n      </CardBody>\n    </Card>\n  );\n\n  const progressTickets = (\n    <Card>\n      <CardBody>\n        <CardTitle className='text-center'>Tickets In Progress</CardTitle>\n        <CardText className='text-center'>\n          <FontAwesomeIcon icon={faTicketAlt} /> {ticketNumber}\n        </CardText>\n        <div className='text-center'>{`${ticketNumber}%`}</div>\n\n        <Progress color='success' value={ticketNumber} />\n      </CardBody>\n    </Card>\n  );\n  const urgentTickets = (\n    <Card>\n      <CardBody>\n        <CardTitle className='text-center'>Urgent Tickets</CardTitle>\n        <CardText className='text-center'>\n          <FontAwesomeIcon icon={faTicketAlt} /> {ticketNumber}\n        </CardText>\n        <div className='text-center'>{`${ticketNumber}%`}</div>\n\n        <Progress color='danger' value={ticketNumber} />\n      </CardBody>\n    </Card>\n  );\n  const unresolvedTickets = (\n    <Card>\n      <CardBody>\n        <CardTitle className='text-center'>Not Resolved Tickets</CardTitle>\n        <CardText className='text-center'>\n          <FontAwesomeIcon icon={faTicketAlt} /> {ticketNumber}\n        </CardText>\n        <div className='text-center'>{`${ticketNumber}%`}</div>\n\n        <Progress color='info' value={ticketNumber}></Progress>\n      </CardBody>\n    </Card>\n  );\n  return <div>{renderSwitch(ticketType)}</div>;\n};\n\nexport default TicketCard;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Container, Row, Col } from 'reactstrap';\nimport { getTickets } from '../../actions/ticketActions';\n\nimport TicketCard from '../TicketsCards/TicketCard';\n//import ChartComponent from '../chart/ChartComponent';\n\nexport class DashboardAdmin extends Component {\n  static propTypes = {\n    auth: PropTypes.object.isRequired,\n    ticket: PropTypes.object.isRequired,\n    getTickets: PropTypes.func.isRequired,\n  };\n  componentDidMount() {\n    this.props.getTickets();\n  }\n  render() {\n    let newTicket = {\n      ticketNumber: 0,\n      ticketType: 'NEW',\n    };\n    let progressTicket = {\n      ticketNumber: 50,\n      ticketType: 'PROGRESS',\n    };\n    let urgentTicket = {\n      ticketNumber: 25,\n      ticketType: 'URGENT',\n    };\n    let unresolvedTicket = {\n      ticketNumber: 5,\n      ticketType: 'UNRESOLVED',\n    };\n    const { tickets } = this.props.ticket;\n    if (tickets) {\n      newTicket.ticketNumber = tickets.filter(\n        (ticket) => ticket.status === 'NEW'\n      ).length;\n      progressTicket.ticketNumber = tickets.filter(\n        (ticket) => ticket.status === 'PROGRESS'\n      ).length;\n      urgentTicket.ticketNumber = tickets.filter(\n        (ticket) => ticket.status === 'URGENT'\n      ).length;\n      unresolvedTicket.ticketNumber = tickets.filter((ticket) => {\n        return ticket.status !== 'UNRESOLVED';\n      }).length;\n    }\n    return (\n      <Container>\n        <Container className='dashboard'>\n          <Row>\n            <Col>\n              <TicketCard ticketInfo={newTicket} />\n            </Col>\n            <Col>\n              <TicketCard ticketInfo={progressTicket} />\n            </Col>\n            <Col>\n              <TicketCard ticketInfo={urgentTicket} />\n            </Col>\n            <Col>\n              <TicketCard ticketInfo={unresolvedTicket} />\n            </Col>\n          </Row>\n        </Container>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  ticket: state.ticket,\n});\nexport default connect(mapStateToProps, { getTickets })(DashboardAdmin);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getTickets } from '../actions/ticketActions';\nimport { getProjects } from '../actions/projectActions';\nimport DashboardAdmin from '../components/admin/DashboardAdmin';\n\nclass Home extends Component {\n  static propTypes = {\n    auth: PropTypes.object.isRequired,\n  };\n  commponentDidMount() {\n    this.props.getTickets();\n    this.props.getProjects();\n  }\n  render() {\n    const { role } = this.props.auth;\n    return (\n      <div className='home'>\n        {role === 'ADMIN' ? <DashboardAdmin /> : '<h1>lol</h1>'}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  router: state.router,\n  isLoading: state.ticket.isLoading,\n  project: state.project,\n  ticket: state.ticket,\n});\nexport default connect(mapStateToProps, { getTickets, getProjects })(Home);\n","import React, { Component } from 'react';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\n\n//Redux utilities\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { register } from '../../actions/authActions';\nimport { clearErrors } from '../../actions/errorActions.js';\n\nclass Register extends Component {\n  state = {\n    name: '',\n    lastname: '',\n    password: '',\n    msg: null,\n  };\n\n  static propTypes = {\n    isAuthenticated: PropTypes.bool,\n    error: PropTypes.object.isRequired,\n    register: PropTypes.func.isRequired,\n    clearErrors: PropTypes.func.isRequired,\n  };\n  componentDidUpdate(prevProps, nextProps) {\n    const { error } = this.props;\n    if (error !== prevProps.error) {\n      //check for register error\n      if (error.id === 'REGISTER_FAIL') {\n        this.setState({ msg: error.msg.msg });\n      } else {\n        this.setState({ msg: null });\n      }\n    }\n  }\n\n  onChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    const { name, lastname, email, password } = this.state;\n\n    //  Create user object\n    const newUser = {\n      name,\n      lastname,\n      email,\n      password,\n    };\n\n    //  Attempt to register\n    this.props.register(newUser);\n  };\n\n  render() {\n    return (\n      <div className='register'>\n        <h1>msg: {this.state.msg}</h1>\n        <Form onSubmit={this.onSubmit}>\n          <FormGroup>\n            <Label for='name'>Name</Label>\n            <Input\n              type='text'\n              name='name'\n              id='name'\n              placeholder='Name'\n              className='mb-3'\n              onChange={this.onChange}\n            />\n            <Label for='lastname'>Lastname</Label>\n            <Input\n              type='text'\n              name='lastname'\n              id='lastname'\n              placeholder='lastname'\n              className='mb-3'\n              onChange={this.onChange}\n            />\n            <Label for='email'>Email</Label>\n            <Input\n              type='email'\n              name='email'\n              id='email'\n              placeholder='Email'\n              className='mb-3'\n              onChange={this.onChange}\n            />\n            <Label for='Password'>Password</Label>\n            <Input\n              type='password'\n              name='password'\n              id='password'\n              placeholder='Password'\n              className='mb-3'\n              onChange={this.onChange}\n            />\n            <Button color='dark' block>\n              Register\n            </Button>\n          </FormGroup>\n        </Form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error,\n});\nexport default connect(mapStateToProps, { register, clearErrors })(Register);\n","import React, { Component } from 'react';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\n\n//Redux utilities\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { login } from '../../actions/authActions';\nimport { clearErrors } from '../../actions/errorActions.js';\n\nclass Login extends Component {\n  state = {\n    name: '',\n    surname: '',\n    password: '',\n    msg: null,\n  };\n\n  static propTypes = {\n    isAuthenticated: PropTypes.bool,\n    error: PropTypes.object.isRequired,\n    login: PropTypes.func.isRequired,\n    clearErrors: PropTypes.func.isRequired,\n  };\n  componentDidUpdate(prevProps, nextProps) {\n    const { error } = this.props;\n    if (error !== prevProps.error) {\n      //check for register error\n      if (error.id === 'REGISTER_FAIL') {\n        this.setState({ msg: error.msg.msg });\n      } else {\n        this.setState({ msg: null });\n      }\n    }\n  }\n\n  onChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n  onSubmit = (e) => {\n    e.preventDefault();\n    const { email, password } = this.state;\n    const user = {\n      email,\n      password,\n    };\n\n    //attempt to login\n    this.props.login(user);\n  };\n\n  render() {\n    return (\n      <div className='Login'>\n        <h1>msg: {this.state.msg}</h1>\n        <Form onSubmit={this.onSubmit}>\n          <FormGroup>\n            <Label for='email'>Email</Label>\n            <Input\n              type='email'\n              name='email'\n              id='email'\n              placeholder='Email'\n              className='mb-3'\n              onChange={this.onChange}\n            />\n            <Label for='Password'>Password</Label>\n            <Input\n              type='password'\n              name='password'\n              id='password'\n              placeholder='Password'\n              className='mb-3'\n              onChange={this.onChange}\n            />\n            <Button color='dark' block>\n              Login\n            </Button>\n          </FormGroup>\n        </Form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error,\n});\nexport default connect(mapStateToProps, { login, clearErrors })(Login);\n","import axios from 'axios';\nimport {\n  GET_USERS,\n  GET_USER,\n  UPDATE_USER,\n  UPDATE_USER_FAIL,\n  USER_LOADING,\n  USERS_LOADING,\n  GET_USERS_FAIL,\n  GET_USER_FAIL,\n} from './types';\n\n//import { tokenConfig } from './authActions';\nimport { returnErrors } from './errorActions';\nimport { getProjects } from '../actions/projectActions';\n\n//  We cant use thunk to getState()\n//  So we import it manually\nimport { store } from '../configureStore';\n\nexport const getUsers = () => (dispatch, getState) => {\n  dispatch(setUsersLoading());\n  axios\n    .get('/api/users', tokenConfig())\n    .then((res) => {\n      dispatch({\n        type: GET_USERS,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      dispatch(returnErrors(err.response.data, err.response.status));\n      dispatch({\n        type: GET_USERS_FAIL,\n      });\n    });\n};\n\nexport const getUserById = (id) => (dispatch, getState) => {\n  dispatch(setUserLoading());\n\n  axios\n    .get(`/api/users/${id}`, tokenConfig(getState))\n    .then((res) => {\n      dispatch({\n        type: GET_USER,\n        payload: res.data[0],\n      });\n    })\n    .catch((err) => {\n      dispatch(returnErrors(err.response.data, err.response.status));\n      dispatch({\n        type: GET_USER_FAIL,\n      });\n    });\n};\nexport const setUsersLoading = () => {\n  return {\n    type: USERS_LOADING,\n  };\n};\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING,\n  };\n};\n\nexport const updateUser = (user) => (dispatch, getState) => {\n  axios\n    .put('/api/users', user, tokenConfig(getState))\n    .then((res) => {\n      dispatch(getProjects());\n      dispatch({\n        type: UPDATE_USER,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      dispatch(returnErrors(err.response.data, err.response.status));\n      dispatch({\n        type: UPDATE_USER_FAIL,\n      });\n    });\n};\n//  Setup config/headers and token\nexport const tokenConfig = () => {\n  //get token from localstorage\n  const token = store.getState().auth.token;\n  //Headers\n  const config = {\n    headers: {\n      'Content-type': 'application/json',\n    },\n  };\n\n  // if tooken, add to headers\n  if (token) {\n    config.headers['x-auth-token'] = token;\n  }\n  return config;\n};\n","import React from 'react';\nimport Select from 'react-select';\n\nimport { FormGroup, Label } from 'reactstrap';\n\nexport const SelectMultiProjects = (props) => {\n  const { projects, id } = props;\n  //  Create the options from the users received as props\n  const createOptionsProjects = (projects) => {\n    try {\n      let filteredProjects = projects.map((project) => {\n        return {\n          value: project._id,\n          label: `${project.name}`,\n        };\n      });\n      return filteredProjects;\n    } catch (err) {\n      console.log('err: ', err);\n    }\n  };\n  //  if the user already has a project assigned\n  //  this project is selected as default inside the select\n  const createDefaultProject = (projects, id) => {\n    let filteredProjects = projects.map((project) => {\n      if (project.userList.includes(id)) {\n        return {\n          value: project._id,\n          label: project.name,\n        };\n      }\n    });\n    return filteredProjects;\n  };\n  return (\n    <FormGroup>\n      <Label for='assigned'>Assigned Projects</Label>\n      <Select\n        name='assignedProject'\n        onChange={props.handleChange}\n        options={createOptionsProjects(projects)}\n        defaultValue={createDefaultProject(projects, id)}\n        isMulti\n      />\n    </FormGroup>\n  );\n};\n\nexport default SelectMultiProjects;\n","import React from 'react';\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Row,\n  Col,\n  Alert,\n} from 'reactstrap';\nimport Select from 'react-select';\nimport SelectMultiProjects from '../Select/SelectMultiProjects';\n\nconst optionsRoles = [\n  { value: 'ADMIN', label: 'ADMIN' },\n  { value: 'USER', label: 'USER' },\n  { value: 'PROJECT_MANAGER', label: 'PROJECT_MANAGER' },\n  { value: 'DEVELOPER', label: 'DEVELOPER' },\n];\n// Need a big refactor\nconst EditUserModal = ({\n  modal,\n  name,\n  lastname,\n  email,\n  address,\n  city,\n  state,\n  zip,\n  orgs,\n  userRole,\n  toggleModal,\n  handleChange,\n  handleChangeRolesSelect,\n  handleChangeOrgsSelect,\n  handleChangeProjects,\n  handleSubmit,\n  errorModal,\n  users,\n  id,\n  projects,\n}) => (\n  <Modal isOpen={modal} toggle={toggleModal}>\n    <ModalHeader toggle={toggleModal}>Edit User</ModalHeader>\n    <ModalBody>\n      {errorModal ? <Alert color='danger'>{errorModal.msg}</Alert> : null}\n      <Form onSubmit={handleSubmit}>\n        <FormGroup>\n          <Label for='name'>name</Label>\n          <Input\n            type='name'\n            name='name'\n            id='name'\n            placeholder='name'\n            value={name ? name : ''}\n            className='mb-3'\n            onChange={handleChange}\n          />\n          <Label for='lastname'>Lastname</Label>\n          <Input\n            type='lastname'\n            name='lastname'\n            id='lastname'\n            placeholder='lastname'\n            className='mb-3'\n            value={lastname ? lastname : ''}\n            onChange={handleChange}\n          />\n          <Label for='email'>Email</Label>\n          <Input\n            type='email'\n            name='email'\n            id='email'\n            placeholder='Email'\n            value={email ? email : ''}\n            className='mb-3'\n            onChange={handleChange}\n            valid\n          />\n          <FormGroup>\n            <Label for='exampleAddress'>Address</Label>\n            <Input\n              type='address'\n              name='address'\n              id='address'\n              placeholder='1234 Main St'\n              value={address ? address : ''}\n              onChange={handleChange}\n            />\n          </FormGroup>\n          <Row form>\n            <Col md={6}>\n              <FormGroup>\n                <Label for='city'>City</Label>\n                <Input\n                  type='city'\n                  name='city'\n                  id='city'\n                  value={city}\n                  onChange={handleChange}\n                />\n              </FormGroup>\n            </Col>\n            <Col md={4}>\n              <FormGroup>\n                <Label for='state'>State</Label>\n                <Input\n                  type='state'\n                  name='state'\n                  id='state'\n                  value={state}\n                  onChange={handleChange}\n                />\n              </FormGroup>\n            </Col>\n            <Col md={2}>\n              <FormGroup>\n                <Label for='zip'>Zip</Label>\n                <Input\n                  type='zip'\n                  name='zip'\n                  id='zip'\n                  value={zip}\n                  onChange={handleChange}\n                />\n              </FormGroup>\n            </Col>\n          </Row>\n          <FormGroup>\n            <Label for='roleSelect'>Select a role for the user</Label>\n\n            <Select\n              name='roleSelect'\n              onChange={handleChangeRolesSelect}\n              defaultValue={optionsRoles.filter(\n                (role) => role.value === userRole\n              )}\n              options={optionsRoles}\n            />\n          </FormGroup>\n          <SelectMultiProjects\n            users={users}\n            projects={projects}\n            id={id}\n            handleChange={handleChangeProjects}\n          />\n          <Button color='dark' style={{ marginTop: '2rem' }} block>\n            Save\n          </Button>\n        </FormGroup>\n      </Form>\n    </ModalBody>\n  </Modal>\n);\n\nexport default EditUserModal;\n","import React, { Component } from 'react';\nimport { Card, CardBody, CardHeader, Container, Table } from 'reactstrap';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUserEdit } from '@fortawesome/free-solid-svg-icons';\n\n//  Redux\nimport { connect } from 'react-redux';\nimport { updateUser } from '../../actions/userActions';\nimport { getUsers } from '../../actions/userActions';\nimport { getProjects } from '../../actions/projectActions';\nimport PropTypes from 'prop-types';\n\nimport EditUserModal from '../modals/EditUserModal';\n\nclass UserList extends Component {\n  static propTypes = {\n    auth: PropTypes.object.isRequired,\n    updateUser: PropTypes.func.isRequired,\n    getProjects: PropTypes.func.isRequired,\n    getUsers: PropTypes.func.isRequired,\n    loadingUser: PropTypes.bool.isRequired,\n    user: PropTypes.object.isRequired,\n    project: PropTypes.object.isRequired,\n  };\n  state = {\n    modal: false,\n    name: null,\n    lastname: null,\n    email: null,\n    role: null,\n    address: null,\n    city: '',\n    state: '',\n    zip: '',\n    id: null,\n    orgs: [],\n    prevProjects: [],\n    nextProjects: null,\n  };\n  componentDidMount() {\n    this.props.getUsers();\n    this.props.getProjects();\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleChangeRolesSelect = (e) => {\n    this.setState({\n      role: e.value,\n    });\n  };\n  handleChangeOrgsSelect = (e) => {\n    const orgSelected = e;\n    //  If no org is select we set se orgs state to empty\n    //  Because a user can have no orgs affected\n    if (orgSelected) {\n      //  We only keep to value of the select\n      const filteredOrgs = orgSelected.map((org) => org.value);\n      this.setState({\n        orgs: [...filteredOrgs],\n      });\n    } else {\n      this.setState({\n        orgs: [],\n      });\n    }\n  };\n  handleChangeProjects = (projects) => {\n    let nextProjects = [];\n    if (projects) {\n      nextProjects = projects.map((project) => project.value);\n    }\n    this.setState({\n      nextProjects,\n    });\n  };\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const {\n      name,\n      lastname,\n      address,\n      city,\n      zip,\n      state,\n      email,\n      role,\n      id,\n      orgs,\n      nextProjects,\n    } = this.state;\n    const updatedUser = {\n      name,\n      lastname,\n      address,\n      email,\n      role,\n      id,\n      orgs,\n      city,\n      state,\n      zip,\n      nextProjects,\n    };\n    this.props.updateUser(updatedUser);\n    this.setState({\n      modal: false,\n      name: null,\n      lastname: null,\n      email: null,\n      role: null,\n      address: null,\n      city: '',\n      state: '',\n      zip: '',\n      id: null,\n      orgs: [],\n      nextProjects: null,\n    });\n  };\n  toggleModal = (e) => {\n    if (!this.state.modal) {\n      let id = e.target.parentNode.id;\n      //  If svg or <th> is clicked, sometimes we dont get id\n      //  this fix the bug\n      if (!id) {\n        id = e.target.id;\n      }\n\n      try {\n        let filteredUsers = this.props.users.filter(\n          (user) => user._id === id\n        )[0];\n        const {\n          name,\n          lastname,\n          address,\n          city,\n          zip,\n          state,\n          email,\n          role,\n          orgs,\n        } = filteredUsers;\n        this.setState({\n          modal: !this.state.modal,\n          id,\n          name,\n          lastname,\n          email,\n          role,\n          address,\n          city,\n          zip,\n          state,\n          orgs,\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    this.setState({\n      modal: !this.state.modal,\n    });\n  };\n\n  render() {\n    const { users, projects } = this.props;\n    return (\n      <Container>\n        <EditUserModal\n          modal={this.state.modal}\n          handleChange={this.handleChange}\n          handleChangeRolesSelect={this.handleChangeRolesSelect}\n          handleChangeOrgsSelect={this.handleChangeOrgsSelect}\n          handleChangeProjects={this.handleChangeProjects}\n          handleSubmit={this.handleSubmit}\n          toggleModal={this.toggleModal}\n          name={this.state.name}\n          lastname={this.state.lastname}\n          email={this.state.email}\n          userRole={this.state.role}\n          address={this.state.address}\n          city={this.state.city}\n          zip={this.state.zip}\n          state={this.state.state}\n          orgs={this.state.orgs}\n          projects={projects}\n          users={users}\n          id={this.state.id}\n        />\n        <Card>\n          <CardHeader>User List</CardHeader>\n          <CardBody>\n            <Table>\n              <thead>\n                <tr>\n                  <th>#</th>\n                  <th>First Name</th>\n                  <th>Last Name</th>\n                  <th>Email</th>\n                  <th>Role</th>\n                  <th>Edit</th>\n                </tr>\n              </thead>\n              <tbody>\n                {users.map((user, index) => {\n                  return (\n                    <tr key={user._id}>\n                      <th scope='row'>{index}</th>\n                      <th>{user.name}</th>\n                      <th>{user.lastname}</th>\n                      <th>{user.email}</th>\n                      <th>{user.role}</th>\n                      <th onClick={this.toggleModal} id={user._id}>\n                        <FontAwesomeIcon id={user._id} icon={faUserEdit} />\n                      </th>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </Table>\n          </CardBody>\n        </Card>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  loadingUser: state.user.loadingUser,\n  user: state.user,\n  projects: state.project.projects,\n});\nexport default connect(mapStateToProps, { updateUser, getUsers, getProjects })(\n  UserList\n);\n","import React, { Component } from 'react';\n\nimport { connect } from 'react-redux';\n\nimport { getUsers } from '../actions/userActions';\nimport PropTypes from 'prop-types';\n\nimport UserList from '../components/UserList/UserList';\n\nclass Users extends Component {\n  static propTypes = {\n    auth: PropTypes.object.isRequired,\n    user: PropTypes.object.isRequired,\n  };\n\n  componentDidMount() {\n    this.props.getUsers();\n  }\n  render() {\n    const { users } = this.props.user;\n\n    return (\n      <div className='users-container'>\n        <h1>User Roles</h1>\n        <UserList users={users}></UserList>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  user: state.user,\n});\nexport default connect(mapStateToProps, { getUsers })(Users);\n","import React from 'react';\nimport Select from 'react-select';\n\nimport { FormGroup, Label } from 'reactstrap';\n\nexport const SelectSingleProject = (props) => {\n  const { projects, id } = props;\n\n  //  Create the options from the projects received as props\n  const createOptionsProjects = (projects) => {\n    return projects.map((project) => {\n      return {\n        value: project._id,\n        label: project.name,\n      };\n    });\n  };\n  //  if the user already has a project assigned\n  //  this project is selected as default inside the select\n  const createDefaultProject = (projects, projectID) => {\n    try {\n      let defaultProject = projects.filter(\n        (project) => project._id === projectID\n      )[0];\n      if (defaultProject) {\n        return [{ value: defaultProject._id, label: defaultProject.name }];\n      } else {\n        console.log('not found: ', defaultProject);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return (\n    <FormGroup>\n      <Label for='assigned'>Assigned Project</Label>\n      <Select\n        name='assignedProject'\n        onChange={props.handleChange}\n        options={createOptionsProjects(projects)}\n        defaultValue={createDefaultProject(projects, id)}\n      />\n    </FormGroup>\n  );\n};\n\nexport default SelectSingleProject;\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n} from 'reactstrap';\nimport Select from 'react-select';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { updateTicket } from '../../actions/ticketActions';\nimport { SelectSingleProject } from '../Select/SelectSingleProject';\n\nconst STATUS = [\n  { value: 'NEW', label: 'NEW' },\n  { value: 'PROGRESS', label: 'PROGRESS' },\n  { value: 'URGENT', label: 'URGENT' },\n  { value: 'UNRESOLVED', label: 'UNRESOLVED' },\n];\nconst createOptionsUsers = (users) => {\n  let filteredUsers = users.map((user) => {\n    return {\n      value: user._id,\n      label: `${user.name} ${user.lastname} | ${user.role}`,\n    };\n  });\n  return [{ value: '', label: 'UNASSIGNED' }, ...filteredUsers];\n};\n\nconst createDefaultUser = (users, assigned_to) => {\n  //  If ticket isnt assigned to anyone we send the default value for the select\n  if (assigned_to === '') {\n    return [{ value: '', label: 'UNASSIGNED' }];\n  }\n\n  let defaultUser = users.filter((user) => user._id === assigned_to)[0];\n  return [\n    {\n      value: defaultUser._id,\n      label: `${defaultUser.name} ${defaultUser.lastname} | ${defaultUser.role}`,\n    },\n  ];\n};\nconst createDefaultStatus = (status) => [{ value: status, label: status }];\n\nclass EditTicketModal extends Component {\n  static propTypes = {\n    updateTicket: PropTypes.func.isRequired,\n  };\n\n  state = {\n    title: '',\n    description: '',\n    status: '',\n    _id: '',\n    assigned_to: null,\n    projectID: '',\n    nextProjID: null,\n  };\n  componentWillMount() {\n    //this.props.getUsers();\n    const {\n      title,\n      description,\n      status,\n      _id,\n      assigned_to,\n      projectID,\n    } = this.props.editTicket;\n    this.setState({ title, description, status, _id, assigned_to, projectID });\n  }\n  handleSubmitModal = () => {};\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n  handleChangeSelectStatus = (e) => {\n    this.setState({ status: e.value });\n  };\n  handleChangeSelectAssignedTo = (e) => {\n    this.setState({ assigned_to: e.value });\n  };\n  handleChangeSelectAssignedProject = (e) => {\n    //  TODO\n    //  if user is not part of the next project\n    //  Assign ticket to undefined\n    this.setState({ nextProjID: e.value });\n  };\n  handleSave = () => {\n    const {\n      title,\n      description,\n      status,\n      _id,\n      assigned_to,\n      projectID,\n      nextProjID,\n    } = this.state;\n    const newTicket = {\n      id: _id,\n      title,\n      description,\n      status,\n      assigned_to,\n      projectID,\n      nextProjID,\n    };\n    this.props.updateTicket(newTicket);\n\n    //  Close modal\n    this.props.toggleModal();\n  };\n  render() {\n    const users = this.props.users;\n    const projects = this.props.projects;\n    return (\n      <Modal isOpen={this.props.modal} toggle={this.props.toggleModal}>\n        <ModalHeader toggle={this.props.toggleModal}>EDIT Ticket</ModalHeader>\n        <ModalBody>\n          <Form onSubmit={this.handleSubmitModal}>\n            <FormGroup>\n              <Label for='title'>Title</Label>\n              <Input\n                type='title'\n                name='title'\n                id='title'\n                value={this.state.title}\n                onChange={this.handleChange}\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for='description'>Description</Label>\n              <Input\n                type='textarea'\n                name='description'\n                id='textarea'\n                value={this.state.description}\n                onChange={this.handleChange}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for='status'>Ticket Status</Label>\n              <Select\n                name='statusSelect'\n                onChange={this.handleChangeSelectStatus}\n                options={STATUS}\n                defaultValue={createDefaultStatus(this.state.status)}\n              />\n            </FormGroup>\n            <SelectSingleProject\n              projects={projects}\n              id={this.state.projectID}\n              handleChange={this.handleChangeSelectAssignedProject}\n            />\n            {users.length > 0 && this.state.assigned_to != null ? (\n              <FormGroup>\n                <Label for='assigned'>Assigned to</Label>\n                <Select\n                  name='assignedSelect'\n                  onChange={this.handleChangeSelectAssignedTo}\n                  options={createOptionsUsers(users)}\n                  defaultValue={createDefaultUser(\n                    users,\n                    this.state.assigned_to\n                  )}\n                />\n              </FormGroup>\n            ) : (\n              ''\n            )}\n\n            <FormGroup>\n              <Button color='secondary'>Cancel</Button>\n              <Button onClick={this.handleSave} color='success'>\n                Save\n              </Button>\n            </FormGroup>\n          </Form>\n        </ModalBody>\n      </Modal>\n    );\n  }\n}\n\nexport default connect(null, { updateTicket })(EditTicketModal);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { Card, CardBody, CardHeader, Container, Table } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faEye } from '@fortawesome/free-solid-svg-icons';\n\nimport EditTicketModal from '../modals/EditTicketModal';\n\nimport { getTickets } from '../../actions/ticketActions';\nimport { getProjects } from '../../actions/projectActions';\nimport { getUsers } from '../../actions/userActions';\nimport { history } from '../../configureStore';\n\nexport class Tickets extends Component {\n  state = {\n    modal: false,\n    editTicket: [],\n  };\n  static propTypes = {\n    auth: PropTypes.object.isRequired,\n    ticket: PropTypes.object.isRequired,\n    project: PropTypes.object.isRequired,\n    user: PropTypes.object.isRequired,\n    getTickets: PropTypes.func.isRequired,\n    getProjects: PropTypes.func.isRequired,\n    getUsers: PropTypes.func.isRequired,\n  };\n  componentWillMount() {\n    this.props.getProjects();\n    this.props.getTickets();\n    this.props.getUsers();\n  }\n  handleEdit = (event) => {\n    //  The modal is close\n    if (!this.state.modal) {\n      let id = event.target.parentNode.id;\n\n      //  If svg or <th> is clicked, sometimes we dont get id\n      //  this fix the bug\n      if (!id) {\n        id = event.target.id;\n      }\n\n      let editTicket = this.props.ticket.tickets.filter(\n        (ticket) => ticket._id === id\n      );\n      //let editUserTicket = this.props.user.users.filter();\n      this.setState({\n        editTicket: editTicket[0],\n        modal: true,\n      });\n    } else {\n      this.setState({\n        modal: false,\n        editTicket: [],\n      });\n    }\n  };\n  toggleModal = () => {\n    this.setState({\n      modal: !this.state.modal,\n    });\n  };\n\n  getUserFromID = (id) => {\n    //  If ID is null then te ticket is unassigned\n    if (id === '') {\n      return 'Unassigned';\n    }\n    const { users } = this.props.user;\n    const filteredUser = users.filter((user) => user._id === id);\n    //  If no user has been found, return default\n    if (filteredUser.length !== 0) {\n      return filteredUser[0].email;\n    }\n    return 'User not Found';\n  };\n\n  getProjectNameFromTicket = (projects, ticket) => {\n    if (projects.length > 0) {\n      try {\n        return projects.filter((project) => project._id === ticket.projectID)[0]\n          .name;\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  };\n  handleView = (event) => {\n    //  The modal is close\n    let id = event.target.parentNode.id;\n    //  If svg or <th> is clicked, sometimes we dont get id\n    //  this fix the bug\n    if (!id) {\n      id = event.target.id;\n    }\n    history.push(`/tickets/view/${id}`);\n  };\n  render() {\n    const { tickets } = this.props.ticket;\n    const { projects } = this.props.project;\n    const { users } = this.props.user;\n    return (\n      <Container className='tickets-list'>\n        {this.state.modal ? (\n          <EditTicketModal\n            modal={this.state.modal}\n            users={users}\n            projects={projects}\n            editTicket={this.state.editTicket}\n            toggleModal={this.toggleModal}\n          />\n        ) : (\n          ''\n        )}\n        <Card>\n          <CardHeader>Tickets List</CardHeader>\n          <CardBody>\n            <Table hover>\n              <thead>\n                <tr>\n                  <th>#</th>\n                  <th>title</th>\n                  <th>created by</th>\n                  <th>assigned_to</th>\n                  <th>status</th>\n                  <th>Project</th>\n                  <th>Edit</th>\n                  <th>View</th>\n                </tr>\n              </thead>\n              <tbody>\n                {tickets.map((ticket) => {\n                  return (\n                    <tr key={ticket._id} id={ticket._id}>\n                      <th>{ticket._id}</th>\n                      <th>{ticket.title}</th>\n                      <th>{this.getUserFromID(ticket.created_by)}</th>\n                      <th>{this.getUserFromID(ticket.assigned_to)}</th>\n                      <th>{ticket.status}</th>\n                      <th>{this.getProjectNameFromTicket(projects, ticket)}</th>\n                      <th id={ticket._id} onClick={this.handleEdit}>\n                        <FontAwesomeIcon id={ticket._id} icon={faEdit} />\n                      </th>\n                      <th onClick={this.handleView} id={ticket._id}>\n                        <FontAwesomeIcon\n                          id={ticket._id}\n                          icon={faEye}\n                        ></FontAwesomeIcon>\n                      </th>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </Table>\n          </CardBody>\n        </Card>\n      </Container>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  isLoading: state.ticket.isLoading,\n  project: state.project,\n  ticket: state.ticket,\n  user: state.user,\n});\nexport default connect(mapStateToProps, { getTickets, getProjects, getUsers })(\n  Tickets\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { Container } from 'reactstrap';\nimport TicketList from '../components/TicketList/TicketList';\n\nexport class Tickets extends Component {\n  static propTypes = {\n    auth: PropTypes.object.isRequired,\n  };\n  render() {\n    return (\n      <Container className='tickets-container'>\n        <TicketList />\n      </Container>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\nexport default connect(mapStateToProps, null)(Tickets);\n","import React, { Component } from 'react';\nimport {\n  Container,\n  Card,\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  CardHeader,\n} from 'reactstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getTickets } from '../actions/ticketActions';\nimport { getProjects } from '../actions/projectActions';\nimport { createTicket } from '../actions/ticketActions';\nimport { getUsers } from '../actions/userActions';\nimport Select from 'react-select';\n\nconst STATUS_TICKET = [\n  { value: 'NEW', label: 'NEW' },\n  { value: 'URGENT', label: 'URGENT' },\n  { value: 'PROGRESS', label: 'PROGRESS' },\n  { value: 'UNRESOLVED', label: 'UNRESOLVED' },\n];\nconst DEFAULT_STATUS_TICKET = [{ value: 'NEW', label: 'NEW' }];\nconst DEFAULT_USER_ASSIGNED = [{ value: 'NEW', label: 'UNASSIGNED' }];\nclass CreateTicket extends Component {\n  state = {\n    title: '',\n    description: '',\n    status: '',\n    projectID: null,\n    assigned_to: '',\n  };\n  static propTypes = {\n    auth: PropTypes.object.isRequired,\n    project: PropTypes.object.isRequired,\n    user: PropTypes.object.isRequired,\n    getTickets: PropTypes.func.isRequired,\n    createTicket: PropTypes.func.isRequired,\n    getProjects: PropTypes.func.isRequired,\n    getUsers: PropTypes.func.isRequired,\n  };\n  createOptionsUsers = () => {\n    let filteredUsers = this.props.user.users.map((user) => {\n      return {\n        value: user._id,\n        label: `${user.name} ${user.lastname} | ${user.role}`,\n      };\n    });\n    return [{ value: '', label: 'UNASSIGNED' }, ...filteredUsers];\n  };\n  createOptionsProjects = () => {\n    return this.props.project.projects.map((project) => {\n      return {\n        value: project._id,\n        label: project.name,\n      };\n    });\n  };\n  createDefaultProject = (defaultProject) => {\n    if (!defaultProject) {\n      let defaultProject = this.props.project.projects.filter(\n        (project) => project.name === 'GENERAL'\n      );\n      //  if there is a GENERAL Project\n      if (defaultProject.length > 0) {\n        return [\n          { value: defaultProject[0]._id, label: defaultProject[0].name },\n        ];\n      } else {\n        return [{ value: '', label: 'GENERAL' }];\n      }\n    }\n  };\n  componentWillMount() {\n    this.props.getUsers();\n    this.props.getProjects();\n    this.props.getTickets();\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n  handleChangeSelectStatus = (e) => {\n    this.setState({ status: e.value });\n  };\n  handleChangeSelectAssignedTo = (e) => {\n    this.setState({ assigned_to: e.value });\n  };\n  handleChangeSelectAssignedProject = (e) => {\n    //  TODO\n    //  if user is not part of the next project\n    //  Assign ticket to undefined\n    this.setState({ projectID: e.value });\n  };\n  handleSave = () => {\n    const { title, description, status, assigned_to, projectID } = this.state;\n    const created_by = this.props.auth.user.id;\n    const newTicket = {\n      title,\n      description,\n      status,\n      created_by,\n      assigned_to,\n      projectID,\n    };\n    this.props.createTicket(newTicket);\n  };\n  render() {\n    const { projects } = this.props.project;\n    const { users } = this.props.user;\n    return (\n      <Container>\n        <Card>\n          <CardHeader>Create a new ticket</CardHeader>\n          <Form onSubmit={this.handleSubmit}>\n            <FormGroup>\n              <Label for='title'>Title</Label>\n              <Input\n                type='title'\n                name='title'\n                id='title'\n                value={this.state.title}\n                onChange={this.handleChange}\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for='description'>Description</Label>\n              <Input\n                type='textarea'\n                name='description'\n                id='textarea'\n                value={this.state.description}\n                onChange={this.handleChange}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for='status'>Ticket Status</Label>\n              <Select\n                name='statusSelect'\n                onChange={this.handleChangeSelectStatus}\n                options={STATUS_TICKET}\n                defaultValue={DEFAULT_STATUS_TICKET}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for='assigned'>Assigned Project</Label>\n              <Select\n                name='assignedProject'\n                onChange={this.handleChangeSelectAssignedProject}\n                options={this.createOptionsProjects(projects)}\n                defaultValue={this.createDefaultProject()}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for='assigned'>Assigned to</Label>\n              <Select\n                name='assignedSelect'\n                onChange={this.handleChangeSelectAssignedTo}\n                options={this.createOptionsUsers(users)}\n                defaultValue={DEFAULT_USER_ASSIGNED}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Button color='secondary'>Cancel</Button>\n              <Button onClick={this.handleSave} color='success'>\n                Save\n              </Button>\n            </FormGroup>\n          </Form>\n        </Card>\n      </Container>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  isLoading: state.ticket.isLoading,\n  ticket: state.ticket,\n  project: state.project,\n  user: state.user,\n});\nexport default connect(mapStateToProps, {\n  getTickets,\n  getProjects,\n  getUsers,\n  createTicket,\n})(CreateTicket);\n","import React from 'react';\nimport Select from 'react-select';\n\nimport { FormGroup, Label } from 'reactstrap';\n\nexport const SelectMultiUsers = (props) => {\n  const { users, userList } = props;\n\n  //  Create the options from the users received as props\n  const createOptionsUsers = (users) => {\n    try {\n      let filteredUsers = users.map((user) => {\n        return {\n          value: user._id,\n          label: `${user.name} ${user.lastname} | ${user.role}`,\n        };\n      });\n      return [...filteredUsers];\n    } catch (err) {\n      console.log('err: ', err);\n    }\n  };\n  //  if the user already has a project assigned\n  //  this project is selected as default inside the select\n  const createDefaultUser = (users, userList) => {\n    if (userList.length > 0) {\n      let filteredUsers = users.map((user) => {\n        if (userList.includes(user._id)) {\n          return {\n            value: user._id,\n            label: `${user.name} ${user.lastname} | ${user.role}`,\n          };\n        }\n      });\n      return filteredUsers;\n    }\n  };\n  return (\n    <FormGroup>\n      <Label for='assigned'>Assigned Users</Label>\n      <Select\n        name='assignedProject'\n        onChange={props.handleChange}\n        options={createOptionsUsers(users)}\n        defaultValue={createDefaultUser(users, userList)}\n        isMulti\n      />\n    </FormGroup>\n  );\n};\n\nexport default SelectMultiUsers;\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n} from 'reactstrap';\nimport { connect } from 'react-redux';\n\nimport PropTypes from 'prop-types';\nimport { updateProject } from '../../actions/projectActions';\nimport SelectMultiProjects from '../Select/SelectMultiUsers';\n\nclass EditProjectModal extends Component {\n  static propTypes = {\n    updateProject: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    description: '',\n    status: '',\n    _id: null,\n    assigned_to: null,\n    projectID: '',\n    nextProjID: null,\n    userList: null,\n    nextUserList: null,\n  };\n  componentWillMount() {\n    const { name, description, _id, userList } = this.props.editProject;\n    this.setState({ name, description, _id, userList });\n  }\n  handleSubmitModal = () => {};\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSave = () => {\n    const { name, description, _id } = this.state;\n    let nextUsers = [];\n\n    if (this.state.nextUserList) {\n      nextUsers = this.state.nextUserList.map((user) => user.value);\n    }\n    const updatedProject = { name, description, _id, nextUsers };\n    this.props.updateProject(updatedProject);\n    //  Close modal\n    this.props.toggleModal();\n  };\n  handleChangeSelectAssignedUsers = (users) => {\n    this.setState({\n      nextUserList: users,\n    });\n  };\n  render() {\n    const { users } = this.props;\n    return (\n      <Modal isOpen={this.props.modal} toggle={this.props.toggleModal}>\n        <ModalHeader toggle={this.props.toggleModal}>EDIT Ticket</ModalHeader>\n        <ModalBody>\n          <Form onSubmit={this.handleSave}>\n            <FormGroup>\n              <Label for='name'>Name</Label>\n              <Input\n                type='name'\n                name='name'\n                id='name'\n                value={this.state.name}\n                onChange={this.handleChange}\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for='description'>Description</Label>\n              <Input\n                type='textarea'\n                name='description'\n                id='textarea'\n                value={this.state.description}\n                onChange={this.handleChange}\n              />\n            </FormGroup>\n            <SelectMultiProjects\n              users={users}\n              userList={this.state.userList}\n              handleChange={this.handleChangeSelectAssignedUsers}\n            />\n            <FormGroup>\n              <Button color='secondary'>Cancel</Button>\n              <Button onClick={this.handleSave} color='success'>\n                Save\n              </Button>\n            </FormGroup>\n          </Form>\n        </ModalBody>\n      </Modal>\n    );\n  }\n}\n\nexport default connect(null, { updateProject })(EditProjectModal);\n","import React, { useState } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\n\nconst ConfirmDeleteModal = (props) => {\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setModal(!modal);\n  const handleDelete = () => {\n    props.delete(props.projectID);\n    toggle();\n  };\n  return (\n    <div>\n      <th onClick={toggle}>\n        <FontAwesomeIcon icon={faTrash} />\n      </th>\n      <Modal isOpen={modal} toggle={toggle}>\n        <ModalHeader toggle={toggle}>Warning</ModalHeader>\n        <ModalBody>\n          This project may contain multiple tickets, are you sure to delete this\n          project and all its related tickets ? Warning !! this action is\n          irreversible\n        </ModalBody>\n        <ModalFooter>\n          <Button color='danger' onClick={handleDelete}>\n            DELETE\n          </Button>\n          <Button color='secondary' onClick={toggle}>\n            Cancel\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n};\n\nexport default ConfirmDeleteModal;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { Card, CardBody, CardHeader, Container, Table } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\n\nimport { getUsers } from '../../actions/userActions';\nimport { getProjects } from '../../actions/projectActions';\nimport { deleteProject } from '../../actions/projectActions';\n\nimport EditProjectModal from '../modals/EditProjectModal';\nimport ConfirmDeleteModal from '../modals/ConfirmDeleteModal';\n\nexport class ProjectList extends Component {\n  state = {\n    modal: false,\n    editProject: null,\n  };\n  static propTypes = {\n    auth: PropTypes.object.isRequired,\n    project: PropTypes.object.isRequired,\n    getProjects: PropTypes.func.isRequired,\n    getUsers: PropTypes.func.isRequired,\n  };\n\n  componentDidMount() {\n    this.props.getProjects();\n    this.props.getUsers();\n  }\n  toggleModal = (event) => {\n    if (!this.state.modal) {\n      let id = event.target.parentNode.id;\n      //  If svg or <th> is clicked, sometimes we dont get id\n      //  this fix the bug\n      if (!id) {\n        id = event.target.id;\n      }\n      this.setState({\n        modal: true,\n        editProject: this.props.project.projects.filter(\n          (project) => project._id === id\n        )[0],\n      });\n    } else {\n      this.setState({\n        modal: false,\n        editProject: null,\n      });\n    }\n  };\n\n  handleDelete = (id) => {\n    this.props.deleteProject(id);\n  };\n  render() {\n    const { projects } = this.props.project;\n    return (\n      <Container>\n        {this.state.modal ? (\n          <EditProjectModal\n            users={this.props.user.users}\n            modal={this.state.modal}\n            projects={projects}\n            editProject={this.state.editProject}\n            toggleModal={this.toggleModal}\n          />\n        ) : (\n          ''\n        )}\n        <Card>\n          <CardHeader>Project List</CardHeader>\n          <CardBody>\n            <Table hover>\n              <thead>\n                <tr>\n                  <th>#</th>\n                  <th>Name</th>\n                  <th>Description</th>\n                  <th>Tickets</th>\n                  <th>Edit</th>\n                  <th>Delete</th>\n                </tr>\n              </thead>\n              <tbody>\n                {projects.map((project) => {\n                  let projectNbr = project.tickets ? project.tickets.length : 0;\n                  return (\n                    <tr key={project._id}>\n                      <th>{project._id}</th>\n                      <th>{project.name}</th>\n                      <th>{project.description}</th>\n                      <th>{projectNbr}</th>\n                      <th id={project._id} onClick={this.toggleModal}>\n                        <FontAwesomeIcon id={project._id} icon={faEdit} />\n                      </th>\n                      {/*\n                      <th id={project._id} onClick={this.handleDelete}>\n                        <FontAwesomeIcon id={project._id} icon={faTrash} />\n                      </th>\n                        */}\n                      <ConfirmDeleteModal\n                        projectID={project._id}\n                        delete={this.handleDelete}\n                      />\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </Table>\n          </CardBody>\n        </Card>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  isLoading: state.ticket.isLoading,\n  project: state.project,\n  user: state.user,\n});\nexport default connect(mapStateToProps, {\n  getUsers,\n  getProjects,\n  deleteProject,\n})(ProjectList);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { Container } from 'reactstrap';\n\n//import TicektList from '../components/TicketList/TicketList';\n//import { getProjects } from '../actions/projectActions';\n//import TicketList from '../components/TicketList/TicketList';\n\nimport ProjectList from '../components/ProjectList/ProjectList';\nexport class Projects extends Component {\n  static propTypes = {\n    auth: PropTypes.object.isRequired,\n  };\n  render() {\n    return (\n      <Container className='projects-container'>\n        <ProjectList />\n      </Container>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\nexport default connect(mapStateToProps, null)(Projects);\n","import React, { Component } from 'react';\nimport {\n  Container,\n  Card,\n  CardHeader,\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n} from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { addProject } from '../actions/projectActions';\n\nclass CreateProject extends Component {\n  state = {\n    name: '',\n    description: '',\n  };\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = () => {\n    const { name, description } = this.state;\n    const newProject = { name, description };\n\n    this.props.addProject(newProject);\n  };\n  render() {\n    return (\n      <Container>\n        <Card>\n          <CardHeader>Create a new project</CardHeader>\n          <Form onSubmit={this.handleSubmit}>\n            <FormGroup>\n              <Label for='name'>name</Label>\n              <Input\n                type='name'\n                name='name'\n                id='name'\n                value={this.state.name}\n                onChange={this.handleChange}\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for='description'>Description</Label>\n              <Input\n                type='textarea'\n                name='description'\n                id='textarea'\n                value={this.state.description}\n                onChange={this.handleChange}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Button color='secondary'>Cancel</Button>\n              <Button onClick={this.handleSubmit} color='success'>\n                Save\n              </Button>\n            </FormGroup>\n          </Form>\n        </Card>\n      </Container>\n    );\n  }\n}\nexport default connect(null, { addProject })(CreateProject);\n","import React from 'react';\nimport { Card, CardHeader, CardBody, Col, Row } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nexport const Answer = (props) => {\n  const { answer } = props;\n  return (\n    <Card>\n      <CardHeader>\n        <Row>\n          <Col>\n            <span>{props.getUserFromId(answer.created_by)}</span>\n          </Col>\n          <Col>\n            <span>{new Date(answer.date).toUTCString()}</span>\n          </Col>\n          <Col md='1'>\n            <th\n              className='row align-items-end'\n              onClick={props.handleDelete}\n              id={answer.replyID}\n            >\n              <FontAwesomeIcon\n                id={answer.replyID}\n                icon={faTrash}\n              ></FontAwesomeIcon>\n            </th>\n          </Col>\n        </Row>\n      </CardHeader>\n      <CardBody>{answer.reply}</CardBody>\n    </Card>\n  );\n};\n","import React, { useState } from 'react';\nimport {\n  Card,\n  CardHeader,\n  InputGroup,\n  Input,\n  InputGroupAddon,\n  Button,\n} from 'reactstrap';\n\nexport const AddAnswer = (props) => {\n  const [reply, setReply] = useState();\n  const handleChange = (e) => {\n    setReply(e.target.value);\n  };\n  const handleClick = () => {\n    setReply('');\n    props.handleAddReply(reply);\n  };\n  return (\n    <Card>\n      <CardHeader>Reply</CardHeader>\n      <InputGroup>\n        <Input placeholder='and...' value={reply} onChange={handleChange} />\n        <InputGroupAddon addonType='append'>\n          <Button onClick={handleClick} color='success'>\n            Reply\n          </Button>\n        </InputGroupAddon>\n      </InputGroup>\n    </Card>\n  );\n};\n","import React from 'react';\n//import Select from 'react-select';\nimport Select from 'react-select';\n\nimport { FormGroup, Label } from 'reactstrap';\n\nexport const SelectSingleUser = (props) => {\n  const { users, assigned_to } = props;\n\n  //  Create the options from the users received as props\n  const createOptionsUser = (users) => {\n    let filteredUsers = users.map((user) => {\n      return {\n        value: user._id,\n        label: `${user.name} ${user.lastname} | ${user.role}`,\n      };\n    });\n    return [{ value: '', label: 'UNSASSIGNED' }, ...filteredUsers];\n  };\n  //  if the user already has a project assigned\n  //  this project is selected as default inside the select\n  const createDefaultUser = (users, userID) => {\n    if (userID !== '') {\n      let defaultUser = users.map((user) => {\n        if (user._id === userID) {\n          return {\n            value: user._id,\n            label: `${user.name} ${user.lastname} | ${user.role}`,\n          };\n        }\n      });\n      return defaultUser;\n    } else {\n      return [{ value: '', label: 'UNSASSIGNED' }];\n    }\n  };\n  return (\n    <FormGroup>\n      <Label for='assigned'>Assigned User</Label>\n      <Select\n        name='assignedProject'\n        onChange={props.handleChange}\n        options={createOptionsUser(users)}\n        defaultValue={createDefaultUser(users, assigned_to)}\n      />\n    </FormGroup>\n  );\n};\n\nexport default SelectSingleUser;\n","import React, { Component } from 'react';\nimport {\n  Container,\n  Card,\n  CardHeader,\n  CardBody,\n  Badge,\n  Col,\n  Row,\n  Button,\n} from 'reactstrap';\n\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getUsers } from '../actions/userActions';\nimport { getTicket } from '../actions/ticketActions';\nimport { addReply } from '../actions/ticketActions';\nimport { clearTicket } from '../actions/ticketActions';\nimport { deleteReply } from '../actions/ticketActions';\nimport { setCompletedTicket } from '../actions/ticketActions';\nimport { setAssignedTo } from '../actions/ticketActions';\nimport { Answer } from '../components/Answer/Answer';\nimport { AddAnswer } from '../components/Answer/AddAnswer';\nimport SelectSingleUser from '../components/Select/SelectSingleUser';\n\nclass ViewSingleTicket extends Component {\n  static propTypes = {\n    auth: PropTypes.object.isRequired,\n    user: PropTypes.object.isRequired,\n    getTicket: PropTypes.func.isRequired,\n    clearTicket: PropTypes.func.isRequired,\n    setCompletedTicket: PropTypes.func.isRequired,\n  };\n  state = {\n    nextAssignedUser: null,\n  };\n  async componentWillMount() {\n    //  Get the params in url\n    const {\n      match: { params },\n    } = this.props;\n    await this.props.getTicket(params.id);\n  }\n\n  componentDidUpdate(prevProps) {\n    //  If the key in history has change, it means the location has changed\n    //  So we update the ticket\n    if (prevProps.location.key !== this.props.location.key) {\n      //  Get the params in url\n      const {\n        match: { params },\n      } = this.props;\n      this.props.getTicket(params.id);\n    }\n  }\n  handleAddReply = (reply) => {\n    const {\n      match: { params },\n    } = this.props;\n    const { user } = this.props.auth;\n    const status = this.props.ticket.ticket.status;\n    this.props.addReply(reply, params.id, user.id, status);\n  };\n  //  Delete a reply\n  handleDelete = (event) => {\n    let id = event.target.parentNode.id;\n\n    //  If svg or <th> is clicked, sometimes we dont get id\n    //  this fix the bug\n    if (!id) {\n      id = event.target.id;\n    }\n    const ticketID = this.props.ticket.ticket._id;\n    const answerID = id;\n    this.props.deleteReply(ticketID, answerID);\n  };\n  getUserFromID = (id) => {\n    const { users } = this.props.user;\n    const filteredUser = users.filter((user) => user._id === id);\n    //  If no user has been found, return default\n    if (filteredUser.length !== 0) {\n      return filteredUser[0].email;\n    }\n    return 'User not Found';\n  };\n  handleChangeSelectUser = (event) => {\n    this.setState({\n      nextAssignedUser: event.value,\n    });\n  };\n  handleSaveSelectUser = () => {\n    const ticketID = this.props.ticket.ticket._id;\n    const userID = this.state.nextAssignedUser;\n    this.props.setAssignedTo(ticketID, userID);\n    this.setState({\n      nextAssignedUser: null,\n    });\n  };\n  handleMarkAsCompleted = () => {\n    const ticketID = this.props.ticket.ticket._id;\n    const { user } = this.props.auth;\n    this.props.setCompletedTicket(ticketID, user.id);\n  };\n  render() {\n    const ticket = this.props.ticket.ticket;\n    const { users } = this.props.user;\n    const answers = ticket.answers;\n    const created_by = this.getUserFromID(ticket.created_by);\n    const assigned_to = this.getUserFromID(ticket.assigned_to);\n    const loading = this.props.ticket.isLoading;\n    return (\n      <Container className='viewsingleticket-container'>\n        <Row>\n          <Col>\n            <Container className='viewsingleticket-display-ticket'>\n              <Card>\n                <CardHeader>\n                  <Row>\n                    <Col className='text-center'>{ticket.title}</Col>\n                  </Row>\n                </CardHeader>\n                <CardHeader>\n                  <Container className='themed-container'>\n                    <Row>\n                      <Col>\n                        <span>Created_by: {created_by}</span>\n                      </Col>\n                      <Col>\n                        <span>Assigned_to: {assigned_to}</span>\n                      </Col>\n                      <Col>\n                        <span>{new Date(ticket.date).toUTCString()}</span>\n                      </Col>\n                      {ticket.isCompleted ? (\n                        <Col xs='1' sm='3' md='2'>\n                          <Badge color='danger'>Completed</Badge>\n                        </Col>\n                      ) : (\n                        <Col xs='1' sm='3' md='2'>\n                          <Badge color='danger'>{ticket.status}</Badge>\n                        </Col>\n                      )}\n                    </Row>\n                  </Container>\n                </CardHeader>\n                <CardBody>{ticket.description}</CardBody>\n              </Card>\n\n              {answers.map((answer) => {\n                return (\n                  <Answer\n                    getUserFromId={this.getUserFromID}\n                    answer={answer}\n                    handleDelete={this.handleDelete}\n                  />\n                );\n              })}\n\n              <AddAnswer handleAddReply={this.handleAddReply} />\n            </Container>\n          </Col>\n          <Col xs='1' sm='3'>\n            <Container className='viewsingleticketcontainer-optionsContainer'>\n              {ticket.isCompleted ? (\n                ''\n              ) : (\n                <Button color='danger' onClick={this.handleMarkAsCompleted}>\n                  Mark as Completed\n                </Button>\n              )}\n              {/*\n          We render the only if the ticket is loaded\n          its doesnt update if the props change :(\n        */}\n              {!loading ? (\n                <SelectSingleUser\n                  users={users}\n                  assigned_to={ticket.assigned_to}\n                  handleChange={this.handleChangeSelectUser}\n                />\n              ) : (\n                ''\n              )}\n              {this.state.nextAssignedUser ? (\n                <Button color='success' onClick={this.handleSaveSelectUser}>\n                  Reassign\n                </Button>\n              ) : (\n                ''\n              )}\n            </Container>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  user: state.user,\n  isLoading: state.ticket.isLoading,\n  project: state.project,\n  ticket: state.ticket,\n});\nexport default connect(mapStateToProps, {\n  getTicket,\n  getUsers,\n  addReply,\n  deleteReply,\n  clearTicket,\n  setCompletedTicket,\n  setAssignedTo,\n})(ViewSingleTicket);\n","import React from 'react';\n\nimport { Card, CardBody, CardHeader, Table } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faEye } from '@fortawesome/free-solid-svg-icons';\nimport { history } from '../../configureStore';\n\nconst TicketListSingleProject = (props) => {\n  const { tickets, role, users } = props;\n  const authorizedToEdit = role === 'ADMIN' || 'PROJECT_MANAGER';\n  const getUserFromID = (id) => {\n    //  If ID is null then te ticket is unassigned\n    if (id === '') {\n      return 'Unassigned';\n    }\n    const filteredUser = users.filter((user) => user._id === id);\n    //  If no user has been found, return default\n    if (filteredUser.length !== 0) {\n      return filteredUser[0].email;\n    }\n    return 'User not Found';\n  };\n  const handleView = (event) => {\n    //  The modal is close\n    let id = event.target.parentNode.id;\n    //  If svg or <th> is clicked, sometimes we dont get id\n    //  this fix the bug\n    if (!id) {\n      id = event.target.id;\n    }\n    history.push(`/tickets/view/${id}`);\n  };\n\n  const handleEdit = () => {};\n  return (\n    <Card>\n      <CardHeader>Tickets List</CardHeader>\n      <CardBody>\n        <Table hover>\n          <thead>\n            <tr>\n              <th>title</th>\n              <th>created by</th>\n              <th>assigned_to</th>\n              <th>status</th>\n              {authorizedToEdit ? <th>Edit</th> : ''}\n              <th>View</th>\n            </tr>\n          </thead>\n          <tbody>\n            {tickets.map((ticket) => {\n              return (\n                <tr key={ticket._id} id={ticket._id}>\n                  <th>{ticket.title}</th>\n                  <th>{getUserFromID(ticket.created_by)}</th>\n                  <th>{getUserFromID(ticket.assigned_to)}</th>\n                  <th>{ticket.status}</th>\n                  {authorizedToEdit ? (\n                    <th id={ticket._id} onClick={handleEdit}>\n                      <FontAwesomeIcon id={ticket._id} icon={faEdit} />\n                    </th>\n                  ) : (\n                    ''\n                  )}\n\n                  <th onClick={handleView} id={ticket._id}>\n                    <FontAwesomeIcon\n                      id={ticket._id}\n                      icon={faEye}\n                    ></FontAwesomeIcon>\n                  </th>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default TicketListSingleProject;\n","import React, { useState } from 'react';\nimport { Card, CardImg, Popover, PopoverHeader, PopoverBody } from 'reactstrap';\n\nconst UserListSingleProject = (props) => {\n  const { user, index } = props;\n  const [popoverOpen, setPopoverOpen] = useState(false);\n\n  const toggle = () => setPopoverOpen(!popoverOpen);\n  return (\n    <Card id={`popover${index}`} style={{ width: '50px', height: '50px' }}>\n      <CardImg\n        top\n        width='50%'\n        src={process.env.PUBLIC_URL + '/avatar.png'}\n        alt='Card image cap'\n      />\n      <Popover\n        placement='bottom'\n        isOpen={popoverOpen}\n        target={`popover${index}`}\n        toggle={toggle}\n      >\n        <PopoverHeader>{`${user.name} ${user.lastname}`}</PopoverHeader>\n        <PopoverBody>{user.email}</PopoverBody>\n      </Popover>\n    </Card>\n  );\n};\nexport default UserListSingleProject;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Container, Card, CardHeader, CardBody, Col, Row } from 'reactstrap';\nimport TicketSingleUser from '../components/TicketList/TicketListSingleProject';\nimport UserListSingleProject from '../components/UserList/UserListSingleProject';\nclass DetailsProject extends Component {\n  render() {\n    //  Get the params in url\n    const {\n      match: { params },\n    } = this.props;\n    const { projects } = this.props.project;\n    const { tickets } = this.props.ticket;\n    const { users } = this.props.user;\n    const { role } = this.props.auth;\n    const project = projects.filter((project) => project._id === params.id)[0];\n    const filteredTickets = tickets.filter(\n      (ticket) => ticket.projectID === project._id\n    );\n    const filteredUsers = users.filter((user) =>\n      project.userList.includes(user._id)\n    );\n    return (\n      <Row>\n        <Col>\n          <Container>\n            <Card>\n              <CardHeader>{project.name}</CardHeader>\n              <CardBody>{project.description}</CardBody>\n            </Card>\n            <TicketSingleUser\n              tickets={filteredTickets}\n              users={users}\n              role={role}\n            />\n          </Container>\n        </Col>\n        <Col className='detailsproject-options-container'>\n          <Row>\n            {filteredUsers.map((user, i) => {\n              return (\n                <Col xs='2'>\n                  <UserListSingleProject user={user} index={i} />\n                </Col>\n              );\n            })}\n          </Row>\n        </Col>\n      </Row>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  user: state.user,\n  isLoading: state.ticket.isLoading,\n  project: state.project,\n  ticket: state.ticket,\n});\nexport default connect(mapStateToProps, null)(DetailsProject);\n","import React, { Component } from 'react';\n//  Router\nimport { Route, Switch } from 'react-router-dom';\nimport { history } from '../configureStore';\nimport { Row, Col } from 'reactstrap';\n//  Routes\nimport PrivateRoute from './PrivateRoute';\nimport AdminRoute from './AdminRoute';\n//  Redux\nimport { connect } from 'react-redux';\n//  Components\nimport NavBar from '../components/NavBar';\nimport SideBar from '../components/sidebar/SideBar';\n//  Pages\nimport Index from '../views/Index';\nimport Home from '../views/Home';\nimport Register from '../components/auth/Register';\nimport Login from '../components/auth/Login';\nimport Users from '../views/Users';\nimport Tickets from '../views/Tickets';\nimport CreateTicket from '../views/CreateTicket';\nimport Projects from '../views/Projects';\nimport CreateProject from '../views/CreateProject';\nimport ViewSingleTicket from '../views/ViewSingleTicket';\nimport { getTickets } from '../actions/ticketActions';\nimport { getProjects } from '../actions/projectActions';\nimport { getUsers } from '../actions/userActions';\nimport DetailsProject from '../views/DetailsProject';\n\nclass Routes extends Component {\n  commponentDidMount() {\n    this.props.getTickets();\n    this.props.getProjects();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    //  If a user just logged in\n    if (\n      nextProps.auth.isAuthenticated !== this.props.auth.isAuthenticated &&\n      nextProps.auth.isAuthenticated\n    ) {\n      this.props.getProjects();\n      this.props.getTickets();\n      this.props.getUsers();\n    }\n  }\n  render() {\n    const location = history.location;\n    return (\n      <div>\n        <Row>\n          <NavBar />\n        </Row>\n        <Row>\n          {this.props.auth.isAuthenticated && location.pathname !== '/' ? (\n            <Col className='sidebar-container'>\n              <SideBar\n                role={this.props.auth.role}\n                tickets={this.props.ticket.tickets}\n                projects={this.props.project.projects}\n              />\n            </Col>\n          ) : (\n            ''\n          )}\n          <Col>\n            <div className='main-container'>\n              <Switch>\n                <main>\n                  <Route exact path='/' component={Index} />\n                  <Route path='/register' component={Register} />\n                  <Route path='/login' component={Login} />\n                  <PrivateRoute exact path='/home' auth={this.props.auth}>\n                    <Home />\n                  </PrivateRoute>\n                  <PrivateRoute exact path='/tickets' auth={this.props.auth}>\n                    <Tickets />\n                  </PrivateRoute>\n                  <AdminRoute\n                    path='/users'\n                    auth={this.props.auth}\n                    role={this.props.auth.role}\n                  >\n                    <Users />\n                  </AdminRoute>\n                  <AdminRoute\n                    path='/tickets/create'\n                    auth={this.props.auth}\n                    role={this.props.auth.role}\n                  >\n                    <CreateTicket />\n                  </AdminRoute>\n                  <AdminRoute\n                    path='/projects'\n                    auth={this.props.auth}\n                    role={this.props.auth.role}\n                  ></AdminRoute>\n                  <AdminRoute\n                    path='/projects/view'\n                    auth={this.props.auth}\n                    role={this.props.auth.role}\n                  >\n                    <Projects />\n                  </AdminRoute>\n                  <AdminRoute\n                    path='/tickets/view/:id'\n                    auth={this.props.auth}\n                    role={this.props.auth.role}\n                    component={ViewSingleTicket}\n                  ></AdminRoute>\n                  <AdminRoute\n                    path='/projects/create'\n                    auth={this.props.auth}\n                    role={this.props.auth.role}\n                  >\n                    <CreateProject />\n                  </AdminRoute>\n                  <PrivateRoute\n                    path='/project/view/:id'\n                    auth={this.props.auth}\n                    role={this.props.auth.role}\n                    component={DetailsProject}\n                  ></PrivateRoute>\n                </main>\n              </Switch>\n            </div>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nconst mapStateToprops = (state) => ({\n  auth: state.auth,\n  router: state.router,\n  isLoading: state.ticket.isLoading,\n  project: state.project,\n  ticket: state.ticket,\n});\n\nexport default connect(mapStateToprops, { getTickets, getProjects, getUsers })(\n  Routes\n);\n//export default withRouter(connect(mapStateTothis.props)(Routes));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n//  Redux && stuff\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Provider } from 'react-redux';\nimport { history } from './configureStore';\nimport { AppContainer } from 'react-hot-loader';\nimport { store, persistor } from './configureStore';\n\nconst render = () => {\n  ReactDOM.render(\n    <AppContainer>\n      <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n          <App history={history} />\n        </PersistGate>\n      </Provider>\n    </AppContainer>,\n    document.getElementById('root')\n  );\n};\n\nrender();\n"],"sourceRoot":""}